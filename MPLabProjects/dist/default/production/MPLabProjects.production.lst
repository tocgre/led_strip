

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 03 16:39:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F25K42 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PIR4	set	14756
    52  0000                     _PMD7	set	14791
    53  0000                     _PMD6	set	14790
    54  0000                     _PMD5	set	14789
    55  0000                     _PMD4	set	14788
    56  0000                     _PMD3	set	14787
    57  0000                     _PMD2	set	14786
    58  0000                     _PMD1	set	14785
    59  0000                     _PMD0	set	14784
    60  0000                     _OSCTUNE	set	14814
    61  0000                     _OSCFRQ	set	14815
    62  0000                     _OSCEN	set	14813
    63  0000                     _OSCCON3	set	14811
    64  0000                     _OSCCON1	set	14809
    65  0000                     _TMR2IF	set	118050
    66  0000                     _RA0PPS	set	14848
    67  0000                     _SMT1SIGPPS	set	15058
    68  0000                     _SMT1WINPPS	set	15057
    69  0000                     _INLVLE	set	14980
    70  0000                     _INLVLC	set	14948
    71  0000                     _INLVLB	set	14932
    72  0000                     _INLVLA	set	14916
    73  0000                     _SLRCONC	set	14947
    74  0000                     _SLRCONB	set	14931
    75  0000                     _SLRCONA	set	14915
    76  0000                     _ODCONC	set	14946
    77  0000                     _ODCONB	set	14930
    78  0000                     _ODCONA	set	14914
    79  0000                     _RC4I2C	set	14955
    80  0000                     _RC3I2C	set	14954
    81  0000                     _RB2I2C	set	14939
    82  0000                     _RB1I2C	set	14938
    83  0000                     _WPUC	set	14945
    84  0000                     _WPUA	set	14913
    85  0000                     _WPUB	set	14929
    86  0000                     _WPUE	set	14977
    87  0000                     _ANSELA	set	14912
    88  0000                     _ANSELB	set	14928
    89  0000                     _ANSELC	set	14944
    90  0000                     _PWM5DCH	set	16237
    91  0000                     _PWM5DCL	set	16236
    92  0000                     _T2CON	set	16300
    93  0000                     _T2CLK	set	16302
    94  0000                     _T2PR	set	16299
    95  0000                     _PWM5CON	set	16238
    96  0000                     _PORTA	set	16330
    97  0000                     _TRISC	set	16324
    98  0000                     _TRISB	set	16323
    99  0000                     _TRISA	set	16322
   100  0000                     _LATC	set	16316
   101  0000                     _LATB	set	16315
   102  0000                     _LATA	set	16314
   103                           
   104                           ; #config settings
   105  0000                     
   106                           	psect	cinit
   107  007E28                     __pcinit:
   108                           	opt callstack 0
   109  007E28                     start_initialization:
   110                           	opt callstack 0
   111  007E28                     __initialization:
   112                           	opt callstack 0
   113  007E28                     end_of_initialization:
   114                           	opt callstack 0
   115  007E28                     __end_of__initialization:
   116                           	opt callstack 0
   117  007E28  0100               	movlb	0
   118  007E2A  EF9F  F03F         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	cstackCOMRAM
   121  000001                     __pcstackCOMRAM:
   122                           	opt callstack 0
   123  000001                     vHILPWM_SetDutyCycle@__u16_DutyCycle:
   124                           	opt callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127  000001                     	ds	2
   128  000003                     ??_vHILPWM_SetDutyCycle:
   129                           
   130                           ; 1 bytes @ 0x2
   131  000003                     	ds	2
   132  000005                     ??_main:
   133                           
   134                           ; 1 bytes @ 0x4
   135  000005                     	ds	2
   136  000007                     main@__u16_Counter:
   137                           	opt callstack 0
   138                           
   139                           ; 2 bytes @ 0x6
   140  000007                     	ds	2
   141  000009                     main@__u16_Counter2:
   142                           	opt callstack 0
   143                           
   144                           ; 2 bytes @ 0x8
   145  000009                     	ds	2
   146  00000B                     main@_u8_VitesseMontee:
   147                           	opt callstack 0
   148                           
   149                           ; 1 bytes @ 0xA
   150  00000B                     	ds	1
   151  00000C                     main@_u8_VitesseDescente:
   152                           	opt callstack 0
   153                           
   154                           ; 1 bytes @ 0xB
   155  00000C                     	ds	1
   156                           
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 9 in file "main.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;  __u16_Counte    2    8[COMRAM] unsigned short 
   167 ;;  __u16_Counte    2    6[COMRAM] unsigned short 
   168 ;;  _u8_VitesseD    1   11[COMRAM] unsigned char 
   169 ;;  _u8_VitesseM    1   10[COMRAM] unsigned char 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   179 ;;      Params:         0       0       0       0       0       0       0       0       0
   180 ;;      Locals:         6       0       0       0       0       0       0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0       0       0
   182 ;;      Totals:         8       0       0       0       0       0       0       0       0
   183 ;;Total ram usage:        8 bytes
   184 ;; Hardware stack levels required when called:    2
   185 ;; This function calls:
   186 ;;		_SYSTEM_Initialize
   187 ;;		_vHILPWM5_Init
   188 ;;		_vHILPWM_SetDutyCycle
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195  007F3E                     __ptext0:
   196                           	opt callstack 0
   197  007F3E                     _main:
   198                           	opt callstack 29
   199  007F3E                     
   200                           ;main.c: 13:     SYSTEM_Initialize();
   201  007F3E  EC17  F03F         	call	_SYSTEM_Initialize	;wreg free
   202  007F42                     
   203                           ;main.c: 15:     vHILPWM5_Init();
   204  007F42  EC4F  F03F         	call	_vHILPWM5_Init	;wreg free
   205  007F46                     
   206                           ;main.c: 29:     uint8_t _u8_VitesseMontee = 30U;
   207  007F46  0E1E               	movlw	30
   208  007F48  6E0B               	movwf	main@_u8_VitesseMontee^0,c
   209  007F4A                     
   210                           ;main.c: 30:     uint8_t _u8_VitesseDescente = 30U;
   211  007F4A  0E1E               	movlw	30
   212  007F4C  6E0C               	movwf	main@_u8_VitesseDescente^0,c
   213  007F4E                     l959:
   214                           
   215                           ;main.c: 34:     {;main.c: 35:         for(uint16_t __u16_Counter = 0U; __u16_Counter < 
      +                          ((204U) - _u8_VitesseMontee); __u16_Counter += _u8_VitesseMontee)
   216  007F4E  0E00               	movlw	0
   217  007F50  6E08               	movwf	(main@__u16_Counter+1)^0,c
   218  007F52  0E00               	movlw	0
   219  007F54  6E07               	movwf	main@__u16_Counter^0,c
   220  007F56  EFC0  F03F         	goto	l967
   221  007F5A                     l961:
   222                           
   223                           ;main.c: 36:         {;main.c: 37:             vHILPWM_SetDutyCycle(__u16_Counter);
   224  007F5A  0060  F01C  F001   	movff	main@__u16_Counter,vHILPWM_SetDutyCycle@__u16_DutyCycle
   225  007F60  0060  F020  F002   	movff	main@__u16_Counter+1,vHILPWM_SetDutyCycle@__u16_DutyCycle+1
   226  007F66  EC3C  F03F         	call	_vHILPWM_SetDutyCycle	;wreg free
   227  007F6A                     
   228                           ;main.c: 38:             _delay((unsigned long)((100U)*(4000000/4000.0)));
   229  007F6A  0E82               	movlw	130
   230  007F6C  6E05               	movwf	??_main^0,c
   231  007F6E  0EDE               	movlw	222
   232  007F70                     u77:
   233  007F70  2EE8               	decfsz	wreg,f,c
   234  007F72  D7FE               	bra	u77
   235  007F74  2E05               	decfsz	??_main^0,f,c
   236  007F76  D7FC               	bra	u77
   237  007F78                     
   238                           ;main.c: 39:         }
   239  007F78  500B               	movf	main@_u8_VitesseMontee^0,w,c
   240  007F7A  2607               	addwf	main@__u16_Counter^0,f,c
   241  007F7C  0E00               	movlw	0
   242  007F7E  2208               	addwfc	(main@__u16_Counter+1)^0,f,c
   243  007F80                     l967:
   244  007F80  0ECC               	movlw	204
   245  007F82  6E05               	movwf	??_main^0,c
   246  007F84  0E00               	movlw	0
   247  007F86  6E06               	movwf	(??_main+1)^0,c
   248  007F88  500B               	movf	main@_u8_VitesseMontee^0,w,c
   249  007F8A  5E05               	subwf	??_main^0,f,c
   250  007F8C  0E00               	movlw	0
   251  007F8E  5A06               	subwfb	(??_main+1)^0,f,c
   252  007F90  5005               	movf	??_main^0,w,c
   253  007F92  5C07               	subwf	main@__u16_Counter^0,w,c
   254  007F94  5006               	movf	(??_main+1)^0,w,c
   255  007F96  5808               	subwfb	(main@__u16_Counter+1)^0,w,c
   256  007F98  A0D8               	btfss	status,0,c
   257  007F9A  EFD1  F03F         	goto	u51
   258  007F9E  EFD3  F03F         	goto	u50
   259  007FA2                     u51:
   260  007FA2  EFAD  F03F         	goto	l961
   261  007FA6                     u50:
   262  007FA6                     
   263                           ;main.c: 40:         for(uint16_t __u16_Counter2 = (204U); __u16_Counter2 > (0U + _u8_Vi
      +                          tesseDescente); __u16_Counter2 -= _u8_VitesseDescente)
   264  007FA6  0E00               	movlw	0
   265  007FA8  6E0A               	movwf	(main@__u16_Counter2+1)^0,c
   266  007FAA  0ECC               	movlw	204
   267  007FAC  6E09               	movwf	main@__u16_Counter2^0,c
   268  007FAE  EFEC  F03F         	goto	l977
   269  007FB2                     l971:
   270                           
   271                           ;main.c: 41:         {;main.c: 42:             vHILPWM_SetDutyCycle(__u16_Counter2);
   272  007FB2  0060  F024  F001   	movff	main@__u16_Counter2,vHILPWM_SetDutyCycle@__u16_DutyCycle
   273  007FB8  0060  F028  F002   	movff	main@__u16_Counter2+1,vHILPWM_SetDutyCycle@__u16_DutyCycle+1
   274  007FBE  EC3C  F03F         	call	_vHILPWM_SetDutyCycle	;wreg free
   275  007FC2                     
   276                           ;main.c: 43:             _delay((unsigned long)((100U)*(4000000/4000.0)));
   277  007FC2  0E82               	movlw	130
   278  007FC4  6E05               	movwf	??_main^0,c
   279  007FC6  0EDE               	movlw	222
   280  007FC8                     u87:
   281  007FC8  2EE8               	decfsz	wreg,f,c
   282  007FCA  D7FE               	bra	u87
   283  007FCC  2E05               	decfsz	??_main^0,f,c
   284  007FCE  D7FC               	bra	u87
   285  007FD0                     
   286                           ;main.c: 44:         }
   287  007FD0  500C               	movf	main@_u8_VitesseDescente^0,w,c
   288  007FD2  5E09               	subwf	main@__u16_Counter2^0,f,c
   289  007FD4  0E00               	movlw	0
   290  007FD6  5A0A               	subwfb	(main@__u16_Counter2+1)^0,f,c
   291  007FD8                     l977:
   292  007FD8  500C               	movf	main@_u8_VitesseDescente^0,w,c
   293  007FDA  6E05               	movwf	??_main^0,c
   294  007FDC  6A06               	clrf	(??_main+1)^0,c
   295  007FDE  5009               	movf	main@__u16_Counter2^0,w,c
   296  007FE0  5C05               	subwf	??_main^0,w,c
   297  007FE2  500A               	movf	(main@__u16_Counter2+1)^0,w,c
   298  007FE4  5806               	subwfb	(??_main+1)^0,w,c
   299  007FE6  A0D8               	btfss	status,0,c
   300  007FE8  EFF8  F03F         	goto	u61
   301  007FEC  EFFA  F03F         	goto	u60
   302  007FF0                     u61:
   303  007FF0  EFD9  F03F         	goto	l971
   304  007FF4                     u60:
   305  007FF4  EFA7  F03F         	goto	l959
   306  007FF8  EFFE  F03F         	goto	start
   307  007FFC                     __end_of_main:
   308                           	opt callstack 0
   309                           
   310 ;; *************** function _vHILPWM5_Init *****************
   311 ;; Defined at:
   312 ;;		line 12 in file "src/HIL/hil_pwm.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   326 ;;      Params:         0       0       0       0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    1
   333 ;; This function calls:
   334 ;;		_vHILPWM_SetDutyCycle
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341  007E9E                     __ptext1:
   342                           	opt callstack 0
   343  007E9E                     _vHILPWM5_Init:
   344                           	opt callstack 29
   345  007E9E                     
   346                           ;src/HIL/hil_pwm.c: 15:     PWM5CON = 0x00;
   347  007E9E  0E00               	movlw	0
   348  007EA0  6E6E               	movwf	110,c	;volatile
   349                           
   350                           ;src/HIL/hil_pwm.c: 18:     T2PR = 50U;
   351  007EA2  0E32               	movlw	50
   352  007EA4  6EAB               	movwf	171,c	;volatile
   353  007EA6                     
   354                           ;src/HIL/hil_pwm.c: 21:     vHILPWM_SetDutyCycle((102U));
   355  007EA6  0E00               	movlw	0
   356  007EA8  6E02               	movwf	(vHILPWM_SetDutyCycle@__u16_DutyCycle+1)^0,c
   357  007EAA  0E66               	movlw	102
   358  007EAC  6E01               	movwf	vHILPWM_SetDutyCycle@__u16_DutyCycle^0,c
   359  007EAE  EC3C  F03F         	call	_vHILPWM_SetDutyCycle	;wreg free
   360  007EB2                     
   361                           ;src/HIL/hil_pwm.c: 24:     PIR4 &= ~(0x04);
   362  007EB2  0139               	movlb	57	; () banked
   363  007EB4  95A4               	bcf	164,2,b	;volatile
   364  007EB6                     
   365                           ; BSR set to: 57
   366                           ;src/HIL/hil_pwm.c: 27:     T2CLK = 0x01;
   367  007EB6  0E01               	movlw	1
   368  007EB8  6EAE               	movwf	174,c	;volatile
   369  007EBA                     
   370                           ; BSR set to: 57
   371                           ;src/HIL/hil_pwm.c: 30:     T2CON = 0x00;
   372  007EBA  0E00               	movlw	0
   373  007EBC  6EAC               	movwf	172,c	;volatile
   374  007EBE                     
   375                           ; BSR set to: 57
   376                           ;src/HIL/hil_pwm.c: 33:     T2CON |= 0x80;
   377  007EBE  8EAC               	bsf	172,7,c	;volatile
   378  007EC0                     
   379                           ; BSR set to: 57
   380                           ;src/HIL/hil_pwm.c: 36:     PWM5CON = 0x80;
   381  007EC0  0E80               	movlw	128
   382  007EC2  6E6E               	movwf	110,c	;volatile
   383  007EC4                     l165:
   384                           
   385                           ; BSR set to: 57
   386  007EC4  A5A4               	btfss	164,2,b	;volatile
   387  007EC6  EF67  F03F         	goto	u41
   388  007ECA  EF69  F03F         	goto	u40
   389  007ECE                     u41:
   390  007ECE  EF62  F03F         	goto	l165
   391  007ED2                     u40:
   392  007ED2                     
   393                           ; BSR set to: 57
   394                           ;src/HIL/hil_pwm.c: 41:     TRISA &= ~((0x01));
   395  007ED2  90C2               	bcf	194,0,c	;volatile
   396  007ED4                     
   397                           ; BSR set to: 57
   398                           ;src/HIL/hil_pwm.c: 43:     RA0PPS = 0x0D;
   399  007ED4  0E0D               	movlw	13
   400  007ED6  013A               	movlb	58	; () banked
   401  007ED8  6F00               	movwf	0,b	;volatile
   402  007EDA                     
   403                           ; BSR set to: 58
   404  007EDA  0012               	return		;funcret
   405  007EDC                     __end_of_vHILPWM5_Init:
   406                           	opt callstack 0
   407                           
   408 ;; *************** function _vHILPWM_SetDutyCycle *****************
   409 ;; Defined at:
   410 ;;		line 51 in file "src/HIL/hil_pwm.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  __u16_DutyCy    2    0[COMRAM] unsigned short 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         2       0       0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0
   426 ;;      Temps:          2       0       0       0       0       0       0       0       0
   427 ;;      Totals:         4       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        4 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_main
   434 ;;		_vHILPWM5_Init
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text2
   439  007E78                     __ptext2:
   440                           	opt callstack 0
   441  007E78                     _vHILPWM_SetDutyCycle:
   442                           	opt callstack 30
   443  007E78                     
   444                           ;src/HIL/hil_pwm.c: 51: void vHILPWM_SetDutyCycle(uint16_t __u16_DutyCycle);src/HIL/hil_
      +                          pwm.c: 52: {;src/HIL/hil_pwm.c: 54:     PWM5DCL = (uint8_t)(__u16_DutyCycle << 6U);
   445  007E78  4001               	rrncf	vHILPWM_SetDutyCycle@__u16_DutyCycle^0,w,c
   446  007E7A  42E8               	rrncf	wreg,f,c
   447  007E7C  0BC0               	andlw	192
   448  007E7E  6E6C               	movwf	108,c	;volatile
   449                           
   450                           ;src/HIL/hil_pwm.c: 56:     PWM5DCH = (uint8_t)(__u16_DutyCycle >> 2U);
   451  007E80  0060  F004  F003   	movff	vHILPWM_SetDutyCycle@__u16_DutyCycle,??_vHILPWM_SetDutyCycle
   452  007E86  0060  F008  F004   	movff	vHILPWM_SetDutyCycle@__u16_DutyCycle+1,??_vHILPWM_SetDutyCycle+1
   453  007E8C  90D8               	bcf	status,0,c
   454  007E8E  3204               	rrcf	(??_vHILPWM_SetDutyCycle+1)^0,f,c
   455  007E90  3203               	rrcf	??_vHILPWM_SetDutyCycle^0,f,c
   456  007E92  90D8               	bcf	status,0,c
   457  007E94  3204               	rrcf	(??_vHILPWM_SetDutyCycle+1)^0,f,c
   458  007E96  3203               	rrcf	??_vHILPWM_SetDutyCycle^0,f,c
   459  007E98  5003               	movf	??_vHILPWM_SetDutyCycle^0,w,c
   460  007E9A  6E6D               	movwf	109,c	;volatile
   461  007E9C  0012               	return		;funcret
   462  007E9E                     __end_of_vHILPWM_SetDutyCycle:
   463                           	opt callstack 0
   464                           
   465 ;; *************** function _SYSTEM_Initialize *****************
   466 ;; Defined at:
   467 ;;		line 50 in file "mcc_generated_files/mcc.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         0       0       0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    1
   488 ;; This function calls:
   489 ;;		_OSCILLATOR_Initialize
   490 ;;		_PIN_MANAGER_Initialize
   491 ;;		_PMD_Initialize
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text3
   498  007E2E                     __ptext3:
   499                           	opt callstack 0
   500  007E2E                     _SYSTEM_Initialize:
   501                           	opt callstack 29
   502  007E2E                     
   503                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   504  007E2E  EC2A  F03F         	call	_PMD_Initialize	;wreg free
   505                           
   506                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   507  007E32  EC6E  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   508                           
   509                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   510  007E36  EC1E  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   511  007E3A  0012               	return		;funcret
   512  007E3C                     __end_of_SYSTEM_Initialize:
   513                           	opt callstack 0
   514                           
   515 ;; *************** function _PMD_Initialize *****************
   516 ;; Defined at:
   517 ;;		line 71 in file "mcc_generated_files/mcc.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         0       0       0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_SYSTEM_Initialize
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text4
   545  007E54                     __ptext4:
   546                           	opt callstack 0
   547  007E54                     _PMD_Initialize:
   548                           	opt callstack 29
   549  007E54                     
   550                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
   551  007E54  0E00               	movlw	0
   552  007E56  0139               	movlb	57	; () banked
   553  007E58  6FC0               	movwf	192,b	;volatile
   554                           
   555                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
   556  007E5A  0E00               	movlw	0
   557  007E5C  6FC1               	movwf	193,b	;volatile
   558                           
   559                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
   560  007E5E  0E00               	movlw	0
   561  007E60  6FC2               	movwf	194,b	;volatile
   562                           
   563                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
   564  007E62  0E00               	movlw	0
   565  007E64  6FC3               	movwf	195,b	;volatile
   566                           
   567                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
   568  007E66  0E00               	movlw	0
   569  007E68  6FC4               	movwf	196,b	;volatile
   570                           
   571                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
   572  007E6A  0E00               	movlw	0
   573  007E6C  6FC5               	movwf	197,b	;volatile
   574                           
   575                           ;mcc_generated_files/mcc.c: 86:     PMD6 = 0x00;
   576  007E6E  0E00               	movlw	0
   577  007E70  6FC6               	movwf	198,b	;volatile
   578                           
   579                           ;mcc_generated_files/mcc.c: 88:     PMD7 = 0x00;
   580  007E72  0E00               	movlw	0
   581  007E74  6FC7               	movwf	199,b	;volatile
   582  007E76                     
   583                           ; BSR set to: 57
   584  007E76  0012               	return		;funcret
   585  007E78                     __end_of_PMD_Initialize:
   586                           	opt callstack 0
   587                           
   588 ;; *************** function _PIN_MANAGER_Initialize *****************
   589 ;; Defined at:
   590 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         0       0       0       0       0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_SYSTEM_Initialize
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text5
   618  007EDC                     __ptext5:
   619                           	opt callstack 0
   620  007EDC                     _PIN_MANAGER_Initialize:
   621                           	opt callstack 29
   622  007EDC                     
   623                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   624  007EDC  0E00               	movlw	0
   625  007EDE  6EBA               	movwf	186,c	;volatile
   626                           
   627                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   628  007EE0  0E00               	movlw	0
   629  007EE2  6EBB               	movwf	187,c	;volatile
   630                           
   631                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   632  007EE4  0E00               	movlw	0
   633  007EE6  6EBC               	movwf	188,c	;volatile
   634  007EE8                     
   635                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   636  007EE8  68C2               	setf	194,c	;volatile
   637  007EEA                     
   638                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   639  007EEA  68C3               	setf	195,c	;volatile
   640  007EEC                     
   641                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   642  007EEC  68C4               	setf	196,c	;volatile
   643                           
   644                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
   645  007EEE  0EFC               	movlw	252
   646  007EF0  013A               	movlb	58	; () banked
   647  007EF2  6F60               	movwf	96,b	;volatile
   648  007EF4                     
   649                           ; BSR set to: 58
   650                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
   651  007EF4  6950               	setf	80,b	;volatile
   652  007EF6                     
   653                           ; BSR set to: 58
   654                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
   655  007EF6  6940               	setf	64,b	;volatile
   656                           
   657                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
   658  007EF8  0E00               	movlw	0
   659  007EFA  6F81               	movwf	129,b	;volatile
   660                           
   661                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
   662  007EFC  0E00               	movlw	0
   663  007EFE  6F51               	movwf	81,b	;volatile
   664                           
   665                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
   666  007F00  0E00               	movlw	0
   667  007F02  6F41               	movwf	65,b	;volatile
   668                           
   669                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
   670  007F04  0E00               	movlw	0
   671  007F06  6F61               	movwf	97,b	;volatile
   672                           
   673                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
   674  007F08  0E00               	movlw	0
   675  007F0A  6F5A               	movwf	90,b	;volatile
   676                           
   677                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
   678  007F0C  0E00               	movlw	0
   679  007F0E  6F5B               	movwf	91,b	;volatile
   680                           
   681                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
   682  007F10  0E00               	movlw	0
   683  007F12  6F6A               	movwf	106,b	;volatile
   684                           
   685                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
   686  007F14  0E00               	movlw	0
   687  007F16  6F6B               	movwf	107,b	;volatile
   688                           
   689                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
   690  007F18  0E00               	movlw	0
   691  007F1A  6F42               	movwf	66,b	;volatile
   692                           
   693                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
   694  007F1C  0E00               	movlw	0
   695  007F1E  6F52               	movwf	82,b	;volatile
   696                           
   697                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
   698  007F20  0E00               	movlw	0
   699  007F22  6F62               	movwf	98,b	;volatile
   700  007F24                     
   701                           ; BSR set to: 58
   702                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
   703  007F24  6943               	setf	67,b	;volatile
   704  007F26                     
   705                           ; BSR set to: 58
   706                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
   707  007F26  6953               	setf	83,b	;volatile
   708  007F28                     
   709                           ; BSR set to: 58
   710                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
   711  007F28  6963               	setf	99,b	;volatile
   712  007F2A                     
   713                           ; BSR set to: 58
   714                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
   715  007F2A  6944               	setf	68,b	;volatile
   716  007F2C                     
   717                           ; BSR set to: 58
   718                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
   719  007F2C  6954               	setf	84,b	;volatile
   720  007F2E                     
   721                           ; BSR set to: 58
   722                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
   723  007F2E  6964               	setf	100,b	;volatile
   724                           
   725                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
   726  007F30  0E08               	movlw	8
   727  007F32  6F84               	movwf	132,b	;volatile
   728                           
   729                           ;mcc_generated_files/pin_manager.c: 123:     SMT1WINPPS = 0x10;
   730  007F34  0E10               	movlw	16
   731  007F36  6FD1               	movwf	209,b	;volatile
   732                           
   733                           ;mcc_generated_files/pin_manager.c: 124:     SMT1SIGPPS = 0x11;
   734  007F38  0E11               	movlw	17
   735  007F3A  6FD2               	movwf	210,b	;volatile
   736  007F3C                     
   737                           ; BSR set to: 58
   738  007F3C  0012               	return		;funcret
   739  007F3E                     __end_of_PIN_MANAGER_Initialize:
   740                           	opt callstack 0
   741                           
   742 ;; *************** function _OSCILLATOR_Initialize *****************
   743 ;; Defined at:
   744 ;;		line 57 in file "mcc_generated_files/mcc.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         0       0       0       0       0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_SYSTEM_Initialize
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text6
   772  007E3C                     __ptext6:
   773                           	opt callstack 0
   774  007E3C                     _OSCILLATOR_Initialize:
   775                           	opt callstack 29
   776  007E3C                     
   777                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x62;
   778  007E3C  0E62               	movlw	98
   779  007E3E  0139               	movlb	57	; () banked
   780  007E40  6FD9               	movwf	217,b	;volatile
   781                           
   782                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
   783  007E42  0E00               	movlw	0
   784  007E44  6FDB               	movwf	219,b	;volatile
   785                           
   786                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
   787  007E46  0E00               	movlw	0
   788  007E48  6FDD               	movwf	221,b	;volatile
   789                           
   790                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x05;
   791  007E4A  0E05               	movlw	5
   792  007E4C  6FDF               	movwf	223,b	;volatile
   793                           
   794                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
   795  007E4E  0E00               	movlw	0
   796  007E50  6FDE               	movwf	222,b	;volatile
   797  007E52                     
   798                           ; BSR set to: 57
   799  007E52  0012               	return		;funcret
   800  007E54                     __end_of_OSCILLATOR_Initialize:
   801                           	opt callstack 0
   802  0000                     
   803                           	psect	rparam
   804  0000                     tosu	equ	0x3FFF
   805                           tosh	equ	0x3FFE
   806                           tosl	equ	0x3FFD
   807                           stkptr	equ	0x3FFC
   808                           pclatu	equ	0x3FFB
   809                           pclath	equ	0x3FFA
   810                           pcl	equ	0x3FF9
   811                           tblptru	equ	0x3FF8
   812                           tblptrh	equ	0x3FF7
   813                           tblptrl	equ	0x3FF6
   814                           tablat	equ	0x3FF5
   815                           prodh	equ	0x3FF4
   816                           prodl	equ	0x3FF3
   817                           indf0	equ	0x3FEF
   818                           postinc0	equ	0x3FEE
   819                           postdec0	equ	0x3FED
   820                           preinc0	equ	0x3FEC
   821                           plusw0	equ	0x3FEB
   822                           fsr0h	equ	0x3FEA
   823                           fsr0l	equ	0x3FE9
   824                           wreg	equ	0x3FE8
   825                           indf1	equ	0x3FE7
   826                           postinc1	equ	0x3FE6
   827                           postdec1	equ	0x3FE5
   828                           preinc1	equ	0x3FE4
   829                           plusw1	equ	0x3FE3
   830                           fsr1h	equ	0x3FE2
   831                           fsr1l	equ	0x3FE1
   832                           bsr	equ	0x3FE0
   833                           indf2	equ	0x3FDF
   834                           postinc2	equ	0x3FDE
   835                           postdec2	equ	0x3FDD
   836                           preinc2	equ	0x3FDC
   837                           plusw2	equ	0x3FDB
   838                           fsr2h	equ	0x3FDA
   839                           fsr2l	equ	0x3FD9
   840                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_vHILPWM_SetDutyCycle
    _vHILPWM5_Init->_vHILPWM_SetDutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     726
                                              4 COMRAM     8     8      0
                  _SYSTEM_Initialize
                      _vHILPWM5_Init
               _vHILPWM_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM5_Init                                        0     0      0     272
               _vHILPWM_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM_SetDutyCycle                                 4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _vHILPWM5_Init
     _vHILPWM_SetDutyCycle
   _vHILPWM_SetDutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             7FF      0       0      20        0.0%
DATA                 0      0       0      21        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 03 16:39:36 2020

                        __CFG_CP$OFF 000000                                   l41 7E76  
                                 l35 7E3A                                   l38 7E52  
                                 u40 7ED2                                   u41 7ECE  
                                 u50 7FA6                                   u51 7FA2  
                                 u60 7FF4                                   u61 7FF0  
                                 u77 7F70                                   u87 7FC8  
              ?_vHILPWM_SetDutyCycle 0001                          __CFG_LVP$ON 000000  
                                l102 7F3C                                  l171 7E9C  
                                l165 7EC4                                  l168 7EDA  
                                l851 7EE8                                  l931 7E78  
                                l861 7F24                                  l853 7EEA  
                                l941 7EBA                                  l933 7E9E  
                                l871 7F2E                                  l863 7F26  
                                l855 7EEC                                  l847 7E54  
                                l943 7EBE                                  l935 7EA6  
                                l951 7F3E                                  l873 7E3C  
                                l865 7F28                                  l857 7EF4  
                                l849 7EDC                                  l945 7EC0  
                                l937 7EB2                                  l961 7F5A  
                                l953 7F42                                  l867 7F2A  
                                l859 7EF6                                  l947 7ED2  
                                l939 7EB6                                  l971 7FB2  
                                l963 7F6A                                  l955 7F46  
                                l869 7F2C                                  l877 7E2E  
                                l949 7ED4                                  l973 7FC2  
                                l965 7F78                                  l957 7F4A  
                                l975 7FD0                                  l967 7F80  
                                l959 7F4E                                  l977 7FD8  
                                l969 7FA6              __size_of_PMD_Initialize 0024  
                                wreg 003FE8                        __CFG_BBEN$OFF 000000  
                       __CFG_ZCD$OFF 000000                      ??_vHILPWM5_Init 0005  
                               _LATA 003FBA                                 _LATB 003FBB  
                               _LATC 003FBC                                 _T2PR 003FAB  
                               _PMD0 0039C0                                 _PMD1 0039C1  
                               _PMD2 0039C2                                 _PMD3 0039C3  
                               _PMD4 0039C4                                 _PMD5 0039C5  
                               _PMD6 0039C6                                 _PMD7 0039C7  
                               _PIR4 0039A4                                 _WPUA 003A41  
                               _WPUB 003A51                                 _WPUC 003A61  
                               _WPUE 003A81                        __CFG_FCMEN$ON 000000  
                               _main 7F3E                                 start 7FFC  
                      __CFG_CSWEN$ON 000000                         ___param_bank 000000  
     __size_of_OSCILLATOR_Initialize 0018        __end_of_OSCILLATOR_Initialize 7E54  
                              ?_main 0001                        __CFG_WDTE$OFF 000000  
                              _T2CLK 003FAE                                _T2CON 003FAC  
                     __CFG_DEBUG$OFF 000000                                _OSCEN 0039DD  
                              _PORTA 003FCA                                _TRISA 003FC2  
                              _TRISB 003FC3                                _TRISC 003FC4  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                              status 003FD8                      __initialization 7E28  
                       __end_of_main 7FFC                       __CFG_SAFEN$OFF 000000  
             ??_vHILPWM_SetDutyCycle 0003                               ??_main 0005  
                     __CFG_PR1WAY$ON 000000                        __activetblptr 000000  
                             _ANSELA 003A40                               _ANSELB 003A50  
                             _ANSELC 003A60                               _RB1I2C 003A5A  
                             _RB2I2C 003A5B                               _RC3I2C 003A6A  
                             _RC4I2C 003A6B                               _RA0PPS 003A00  
                             _ODCONA 003A42                               _ODCONB 003A52  
                             _ODCONC 003A62                       __CFG_WDTCCS$SC 000000  
                             _INLVLA 003A44                               _INLVLB 003A54  
                             _INLVLC 003A64                               _INLVLE 003A84  
                             _OSCFRQ 0039DF                               _TMR2IF 01CD22  
                     __CFG_XINST$OFF 000000            __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                     __CFG_STVREN$ON 000000                       _PMD_Initialize 7E54  
                  _SYSTEM_Initialize 7E2E                           __accesstop 0060  
            __end_of__initialization 7E28                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    main@__u16_Counter 0007  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0001  
             __end_of_PMD_Initialize 7E78            __end_of_SYSTEM_Initialize 7E3C  
                    __CFG_IVT1WAY$ON 000000                      __CFG_MVECEN$OFF 000000  
                    __CFG_PPS1WAY$ON 000000                      ?_PMD_Initialize 0001  
                __CFG_PWRTS$PWRT_OFF 000000                              _OSCCON1 0039D9  
                            _OSCCON3 0039DB                              _OSCTUNE 0039DE  
                            _PWM5DCH 003F6D                              _PWM5DCL 003F6C  
                            _PWM5CON 003F6E                              _SLRCONA 003A43  
                            _SLRCONB 003A53                              _SLRCONC 003A63  
              __end_of_vHILPWM5_Init 7EDC                              __Hparam 0000  
                            __Lparam 0000                              __pcinit 7E28  
                            __ramtop 0800                              __ptext0 7F3E  
                            __ptext1 7E9E                              __ptext2 7E78  
                            __ptext3 7E2E                              __ptext4 7E54  
                            __ptext5 7EDC                              __ptext6 7E3C  
                    __CFG_WRTAPP$OFF 000000                _OSCILLATOR_Initialize 7E3C  
           ??_PIN_MANAGER_Initialize 0001                      __CFG_WRTSAF$OFF 000000  
         __size_of_SYSTEM_Initialize 000E                 end_of_initialization 7E28  
              __CFG_WDTCPS$WDTCPS_31 000000        __size_of_vHILPWM_SetDutyCycle 0026  
                   __CFG_FEXTOSC$OFF 000000                   main@__u16_Counter2 0009  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 7E28  
    __size_of_PIN_MANAGER_Initialize 0062                     __CFG_LPBOREN$OFF 000000  
                   ??_PMD_Initialize 0001               _PIN_MANAGER_Initialize 7EDC  
             __CFG_BBSIZE$BBSIZE_512 000000                  __CFG_BORV$VBOR_2P45 000000  
             __size_of_vHILPWM5_Init 003E         __end_of_vHILPWM_SetDutyCycle 7E9E  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000              ??_OSCILLATOR_Initialize 0001  
                      _vHILPWM5_Init 7E9E                        __size_of_main 00BE  
               __CFG_WDTCWS$WDTCWS_7 000000                       ?_vHILPWM5_Init 0001  
            ?_PIN_MANAGER_Initialize 0001                    __CFG_CLKOUTEN$OFF 000000  
                         _SMT1SIGPPS 003AD2                           _SMT1WINPPS 003AD1  
vHILPWM_SetDutyCycle@__u16_DutyCycle 0001                 _vHILPWM_SetDutyCycle 7E78  
            main@_u8_VitesseDescente 000C       __end_of_PIN_MANAGER_Initialize 7F3E  
              main@_u8_VitesseMontee 000B  
