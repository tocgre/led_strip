

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 06 12:34:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=4,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=4,class=CODE,delta=1
    26                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	text18,global,reloc=4,class=CODE,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F25K42 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	nvCOMRAM
    67  00000F                     __pnvCOMRAM:
    68                           	opt callstack 0
    69  00000F                     _TMR1_InterruptHandler:
    70                           	opt callstack 0
    71  00000F                     	ds	2
    72  000011                     _timer1ReloadVal:
    73                           	opt callstack 0
    74  000011                     	ds	2
    75  0000                     _IVTADL	set	14493
    76  0000                     _IVTADH	set	14494
    77  0000                     _IVTADU	set	14495
    78  0000                     _IPR4bits	set	14724
    79  0000                     _PIE4bits	set	14740
    80  0000                     _PIR4bits	set	14756
    81  0000                     _PIR9	set	14761
    82  0000                     _PIR7	set	14759
    83  0000                     _PIR4	set	14756
    84  0000                     _PMD7	set	14791
    85  0000                     _PMD6	set	14790
    86  0000                     _PMD5	set	14789
    87  0000                     _PMD4	set	14788
    88  0000                     _PMD3	set	14787
    89  0000                     _PMD2	set	14786
    90  0000                     _PMD1	set	14785
    91  0000                     _PMD0	set	14784
    92  0000                     _OSCTUNE	set	14814
    93  0000                     _OSCFRQ	set	14815
    94  0000                     _OSCEN	set	14813
    95  0000                     _OSCCON3	set	14811
    96  0000                     _OSCCON1	set	14809
    97  0000                     _TMR6IF	set	118088
    98  0000                     _TMR4IF	set	118072
    99  0000                     _TMR2IF	set	118050
   100  0000                     _RA2PPS	set	14850
   101  0000                     _RA1PPS	set	14849
   102  0000                     _RA0PPS	set	14848
   103  0000                     _INLVLE	set	14980
   104  0000                     _INLVLC	set	14948
   105  0000                     _INLVLB	set	14932
   106  0000                     _INLVLA	set	14916
   107  0000                     _SLRCONC	set	14947
   108  0000                     _SLRCONB	set	14931
   109  0000                     _SLRCONA	set	14915
   110  0000                     _ODCONC	set	14946
   111  0000                     _ODCONB	set	14930
   112  0000                     _ODCONA	set	14914
   113  0000                     _RC4I2C	set	14955
   114  0000                     _RC3I2C	set	14954
   115  0000                     _RB2I2C	set	14939
   116  0000                     _RB1I2C	set	14938
   117  0000                     _WPUC	set	14945
   118  0000                     _WPUA	set	14913
   119  0000                     _WPUB	set	14929
   120  0000                     _WPUE	set	14977
   121  0000                     _ANSELA	set	14912
   122  0000                     _ANSELB	set	14928
   123  0000                     _ANSELC	set	14944
   124  0000                     _IVTLOCKbits	set	16340
   125  0000                     _IVTLOCK	set	16340
   126  0000                     _T1GCONbits	set	16307
   127  0000                     _T1CONbits	set	16306
   128  0000                     _T1CON	set	16306
   129  0000                     _TMR1L	set	16304
   130  0000                     _TMR1H	set	16305
   131  0000                     _T1CLK	set	16309
   132  0000                     _T1GATE	set	16308
   133  0000                     _T1GCON	set	16307
   134  0000                     _PWM7DCH	set	16229
   135  0000                     _PWM7DCL	set	16228
   136  0000                     _PWM6DCH	set	16233
   137  0000                     _PWM6DCL	set	16232
   138  0000                     _PWM5DCH	set	16237
   139  0000                     _PWM5DCL	set	16236
   140  0000                     _T6CON	set	16276
   141  0000                     _T6CLK	set	16278
   142  0000                     _T6PR	set	16275
   143  0000                     _PWM7CON	set	16230
   144  0000                     _T4CON	set	16288
   145  0000                     _T4CLK	set	16290
   146  0000                     _T4PR	set	16287
   147  0000                     _PWM6CON	set	16234
   148  0000                     _T2CON	set	16300
   149  0000                     _T2CLK	set	16302
   150  0000                     _T2PR	set	16299
   151  0000                     _PWM5CON	set	16238
   152  0000                     _PORTA	set	16330
   153  0000                     _INTCON0bits	set	16338
   154  0000                     _TRISC	set	16324
   155  0000                     _TRISB	set	16323
   156  0000                     _TRISA	set	16322
   157  0000                     _LATC	set	16316
   158  0000                     _LATB	set	16315
   159  0000                     _LATA	set	16314
   160  0000                     _GIE	set	130711
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  00046C                     __pcinit:
   166                           	opt callstack 0
   167  00046C                     start_initialization:
   168                           	opt callstack 0
   169  00046C                     __initialization:
   170                           	opt callstack 0
   171                           
   172                           ;
   173                           ; Setup IVTBASE
   174                           ;
   175  00046C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   176  00046E  6ED5               	movwf	213,c
   177  000470  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   178  000472  6ED6               	movwf	214,c
   179  000474  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   180  000476  6ED7               	movwf	215,c
   181  000478                     end_of_initialization:
   182                           	opt callstack 0
   183  000478                     __end_of__initialization:
   184                           	opt callstack 0
   185  000478  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  00047A  6EF8               	movwf	tblptru,c
   187  00047C  0100               	movlb	0
   188  00047E  EF59  F000         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt callstack 0
   193  000001                     TMR1_WriteTimer@timerVal:
   194                           	opt callstack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197  000001                     	ds	2
   198  000003                     INTERRUPT_Initialize@state:
   199                           	opt callstack 0
   200  000003                     vHILPWM5_SetDutyCycle@__u16_DutyCycle:
   201                           	opt callstack 0
   202  000003                     vHILPWM6_SetDutyCycle@__u16_DutyCycle:
   203                           	opt callstack 0
   204  000003                     vHILPWM7_SetDutyCycle@__u16_DutyCycle:
   205                           	opt callstack 0
   206  000003                     TMR1_SetInterruptHandler@InterruptHandler:
   207                           	opt callstack 0
   208                           
   209                           ; 2 bytes @ 0x2
   210  000003                     	ds	2
   211  000005                     ??_TMR1_Initialize:
   212  000005                     ??_vHILPWM5_SetDutyCycle:
   213  000005                     ??_vHILPWM6_SetDutyCycle:
   214  000005                     ??_vHILPWM7_SetDutyCycle:
   215  000005                     
   216                           ; 1 bytes @ 0x4
   217  000005                     	ds	2
   218  000007                     ??_main:
   219                           
   220                           ; 1 bytes @ 0x6
   221  000007                     	ds	2
   222  000009                     main@_u8_VitesseMontee:
   223                           	opt callstack 0
   224                           
   225                           ; 1 bytes @ 0x8
   226  000009                     	ds	1
   227  00000A                     main@_u8_VitesseDescente:
   228                           	opt callstack 0
   229                           
   230                           ; 1 bytes @ 0x9
   231  00000A                     	ds	1
   232  00000B                     main@__u16_Counter:
   233                           	opt callstack 0
   234                           
   235                           ; 2 bytes @ 0xA
   236  00000B                     	ds	2
   237  00000D                     main@__u16_Counter2:
   238                           	opt callstack 0
   239                           
   240                           ; 2 bytes @ 0xC
   241  00000D                     	ds	2
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 25 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  __u16_Counte    2   12[COMRAM] unsigned short 
   253 ;;  __u16_Counte    2   10[COMRAM] unsigned short 
   254 ;;  _u8_VitesseD    1    9[COMRAM] unsigned char 
   255 ;;  _u8_VitesseM    1    8[COMRAM] unsigned char 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   265 ;;      Params:         0       0       0       0       0       0       0       0       0
   266 ;;      Locals:         6       0       0       0       0       0       0       0       0
   267 ;;      Temps:          2       0       0       0       0       0       0       0       0
   268 ;;      Totals:         8       0       0       0       0       0       0       0       0
   269 ;;Total ram usage:        8 bytes
   270 ;; Hardware stack levels required when called:    5
   271 ;; This function calls:
   272 ;;		_SYSTEM_Initialize
   273 ;;		_vHILPWM5_Init
   274 ;;		_vHILPWM5_SetDutyCycle
   275 ;;		_vHILPWM6_Init
   276 ;;		_vHILPWM6_SetDutyCycle
   277 ;;		_vHILPWM7_Init
   278 ;;		_vHILPWM7_SetDutyCycle
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text0
   285  0000B2                     __ptext0:
   286                           	opt callstack 0
   287  0000B2                     _main:
   288                           	opt callstack 26
   289  0000B2                     
   290                           ;main.c: 29:     SYSTEM_Initialize();
   291  0000B2  EC41  F002         	call	_SYSTEM_Initialize	;wreg free
   292                           
   293                           ;main.c: 31:     vHILPWM5_Init();
   294  0000B6  EC8B  F001         	call	_vHILPWM5_Init	;wreg free
   295                           
   296                           ;main.c: 32:     vHILPWM6_Init();
   297  0000BA  EC6C  F001         	call	_vHILPWM6_Init	;wreg free
   298                           
   299                           ;main.c: 33:     vHILPWM7_Init();
   300  0000BE  EC4D  F001         	call	_vHILPWM7_Init	;wreg free
   301  0000C2                     
   302                           ;main.c: 40:     (INTCON0bits.GIEH = 1);
   303  0000C2  8ED2               	bsf	210,7,c	;volatile
   304  0000C4                     
   305                           ;main.c: 51:     uint8_t _u8_VitesseMontee = 2U;
   306  0000C4  0E02               	movlw	2
   307  0000C6  6E09               	movwf	main@_u8_VitesseMontee^0,c
   308  0000C8                     
   309                           ;main.c: 52:     uint8_t _u8_VitesseDescente = 2U;
   310  0000C8  0E02               	movlw	2
   311  0000CA  6E0A               	movwf	main@_u8_VitesseDescente^0,c
   312  0000CC                     l1301:
   313                           
   314                           ;main.c: 56:     {;main.c: 57:         for(uint16_t __u16_Counter = 0U; __u16_Counter < 
      +                          ((204U) - _u8_VitesseMontee); __u16_Counter += _u8_VitesseMontee)
   315  0000CC  0E00               	movlw	0
   316  0000CE  6E0C               	movwf	(main@__u16_Counter+1)^0,c
   317  0000D0  0E00               	movlw	0
   318  0000D2  6E0B               	movwf	main@__u16_Counter^0,c
   319  0000D4  EF8F  F000         	goto	l1309
   320  0000D8                     l1303:
   321                           
   322                           ;main.c: 58:         {;main.c: 59:             vHILPWM5_SetDutyCycle(__u16_Counter);
   323  0000D8  0060  F02C  F003   	movff	main@__u16_Counter,vHILPWM5_SetDutyCycle@__u16_DutyCycle
   324  0000DE  0060  F030  F004   	movff	main@__u16_Counter+1,vHILPWM5_SetDutyCycle@__u16_DutyCycle+1
   325  0000E4  EC05  F002         	call	_vHILPWM5_SetDutyCycle	;wreg free
   326                           
   327                           ;main.c: 60:             vHILPWM6_SetDutyCycle(__u16_Counter);
   328  0000E8  0060  F02C  F003   	movff	main@__u16_Counter,vHILPWM6_SetDutyCycle@__u16_DutyCycle
   329  0000EE  0060  F030  F004   	movff	main@__u16_Counter+1,vHILPWM6_SetDutyCycle@__u16_DutyCycle+1
   330  0000F4  ECF2  F001         	call	_vHILPWM6_SetDutyCycle	;wreg free
   331                           
   332                           ;main.c: 61:             vHILPWM7_SetDutyCycle(__u16_Counter);
   333  0000F8  0060  F02C  F003   	movff	main@__u16_Counter,vHILPWM7_SetDutyCycle@__u16_DutyCycle
   334  0000FE  0060  F030  F004   	movff	main@__u16_Counter+1,vHILPWM7_SetDutyCycle@__u16_DutyCycle+1
   335  000104  ECDF  F001         	call	_vHILPWM7_SetDutyCycle	;wreg free
   336  000108                     
   337                           ;main.c: 62:             _delay((unsigned long)((10U)*(4000000/4000.0)));
   338  000108  0E0D               	movlw	13
   339  00010A  6E07               	movwf	??_main^0,c
   340  00010C  0EFC               	movlw	252
   341  00010E                     u187:
   342  00010E  2EE8               	decfsz	wreg,f,c
   343  000110  D7FE               	bra	u187
   344  000112  2E07               	decfsz	??_main^0,f,c
   345  000114  D7FC               	bra	u187
   346  000116                     
   347                           ;main.c: 63:         }
   348  000116  5009               	movf	main@_u8_VitesseMontee^0,w,c
   349  000118  260B               	addwf	main@__u16_Counter^0,f,c
   350  00011A  0E00               	movlw	0
   351  00011C  220C               	addwfc	(main@__u16_Counter+1)^0,f,c
   352  00011E                     l1309:
   353  00011E  0ECC               	movlw	204
   354  000120  6E07               	movwf	??_main^0,c
   355  000122  0E00               	movlw	0
   356  000124  6E08               	movwf	(??_main+1)^0,c
   357  000126  5009               	movf	main@_u8_VitesseMontee^0,w,c
   358  000128  5E07               	subwf	??_main^0,f,c
   359  00012A  0E00               	movlw	0
   360  00012C  5A08               	subwfb	(??_main+1)^0,f,c
   361  00012E  5007               	movf	??_main^0,w,c
   362  000130  5C0B               	subwf	main@__u16_Counter^0,w,c
   363  000132  5008               	movf	(??_main+1)^0,w,c
   364  000134  580C               	subwfb	(main@__u16_Counter+1)^0,w,c
   365  000136  A0D8               	btfss	status,0,c
   366  000138  EFA0  F000         	goto	u141
   367  00013C  EFA2  F000         	goto	u140
   368  000140                     u141:
   369  000140  EF6C  F000         	goto	l1303
   370  000144                     u140:
   371  000144                     
   372                           ;main.c: 64:         for(uint16_t __u16_Counter2 = (204U); __u16_Counter2 > (0U + _u8_Vi
      +                          tesseDescente); __u16_Counter2 -= _u8_VitesseDescente)
   373  000144  0E00               	movlw	0
   374  000146  6E0E               	movwf	(main@__u16_Counter2+1)^0,c
   375  000148  0ECC               	movlw	204
   376  00014A  6E0D               	movwf	main@__u16_Counter2^0,c
   377  00014C  EFCB  F000         	goto	l1319
   378  000150                     l1313:
   379                           
   380                           ;main.c: 65:         {;main.c: 66:             vHILPWM5_SetDutyCycle(__u16_Counter2);
   381  000150  0060  F034  F003   	movff	main@__u16_Counter2,vHILPWM5_SetDutyCycle@__u16_DutyCycle
   382  000156  0060  F038  F004   	movff	main@__u16_Counter2+1,vHILPWM5_SetDutyCycle@__u16_DutyCycle+1
   383  00015C  EC05  F002         	call	_vHILPWM5_SetDutyCycle	;wreg free
   384                           
   385                           ;main.c: 67:             vHILPWM6_SetDutyCycle(__u16_Counter2);
   386  000160  0060  F034  F003   	movff	main@__u16_Counter2,vHILPWM6_SetDutyCycle@__u16_DutyCycle
   387  000166  0060  F038  F004   	movff	main@__u16_Counter2+1,vHILPWM6_SetDutyCycle@__u16_DutyCycle+1
   388  00016C  ECF2  F001         	call	_vHILPWM6_SetDutyCycle	;wreg free
   389                           
   390                           ;main.c: 68:             vHILPWM7_SetDutyCycle(__u16_Counter2);
   391  000170  0060  F034  F003   	movff	main@__u16_Counter2,vHILPWM7_SetDutyCycle@__u16_DutyCycle
   392  000176  0060  F038  F004   	movff	main@__u16_Counter2+1,vHILPWM7_SetDutyCycle@__u16_DutyCycle+1
   393  00017C  ECDF  F001         	call	_vHILPWM7_SetDutyCycle	;wreg free
   394  000180                     
   395                           ;main.c: 69:             _delay((unsigned long)((10U)*(4000000/4000.0)));
   396  000180  0E0D               	movlw	13
   397  000182  6E07               	movwf	??_main^0,c
   398  000184  0EFC               	movlw	252
   399  000186                     u197:
   400  000186  2EE8               	decfsz	wreg,f,c
   401  000188  D7FE               	bra	u197
   402  00018A  2E07               	decfsz	??_main^0,f,c
   403  00018C  D7FC               	bra	u197
   404  00018E                     
   405                           ;main.c: 70:         }
   406  00018E  500A               	movf	main@_u8_VitesseDescente^0,w,c
   407  000190  5E0D               	subwf	main@__u16_Counter2^0,f,c
   408  000192  0E00               	movlw	0
   409  000194  5A0E               	subwfb	(main@__u16_Counter2+1)^0,f,c
   410  000196                     l1319:
   411  000196  500A               	movf	main@_u8_VitesseDescente^0,w,c
   412  000198  6E07               	movwf	??_main^0,c
   413  00019A  6A08               	clrf	(??_main+1)^0,c
   414  00019C  500D               	movf	main@__u16_Counter2^0,w,c
   415  00019E  5C07               	subwf	??_main^0,w,c
   416  0001A0  500E               	movf	(main@__u16_Counter2+1)^0,w,c
   417  0001A2  5808               	subwfb	(??_main+1)^0,w,c
   418  0001A4  A0D8               	btfss	status,0,c
   419  0001A6  EFD7  F000         	goto	u151
   420  0001AA  EFD9  F000         	goto	u150
   421  0001AE                     u151:
   422  0001AE  EFA8  F000         	goto	l1313
   423  0001B2                     u150:
   424  0001B2  EF66  F000         	goto	l1301
   425  0001B6  EF57  F000         	goto	start
   426  0001BA                     __end_of_main:
   427                           	opt callstack 0
   428                           
   429 ;; *************** function _vHILPWM7_Init *****************
   430 ;; Defined at:
   431 ;;		line 84 in file "src/HIL/hil_pwm.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   445 ;;      Params:         0       0       0       0       0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; Hardware stack levels required when called:    3
   452 ;; This function calls:
   453 ;;		_vHILPWM7_SetDutyCycle
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text1
   460  00029A                     __ptext1:
   461                           	opt callstack 0
   462  00029A                     _vHILPWM7_Init:
   463                           	opt callstack 27
   464  00029A                     
   465                           ;src/HIL/hil_pwm.c: 87:     PWM7CON = 0x00;
   466  00029A  0E00               	movlw	0
   467  00029C  6E66               	movwf	102,c	;volatile
   468                           
   469                           ;src/HIL/hil_pwm.c: 90:     T6PR = 50U;
   470  00029E  0E32               	movlw	50
   471  0002A0  6E93               	movwf	147,c	;volatile
   472  0002A2                     
   473                           ;src/HIL/hil_pwm.c: 93:     vHILPWM7_SetDutyCycle((102U));
   474  0002A2  0E00               	movlw	0
   475  0002A4  6E04               	movwf	(vHILPWM7_SetDutyCycle@__u16_DutyCycle+1)^0,c
   476  0002A6  0E66               	movlw	102
   477  0002A8  6E03               	movwf	vHILPWM7_SetDutyCycle@__u16_DutyCycle^0,c
   478  0002AA  ECDF  F001         	call	_vHILPWM7_SetDutyCycle	;wreg free
   479  0002AE                     
   480                           ;src/HIL/hil_pwm.c: 96:     PIR9 &= ~(0x01);
   481  0002AE  0139               	movlb	57	; () banked
   482  0002B0  91A9               	bcf	169,0,b	;volatile
   483  0002B2                     
   484                           ; BSR set to: 57
   485                           ;src/HIL/hil_pwm.c: 99:     T6CLK = 0x01;
   486  0002B2  0E01               	movlw	1
   487  0002B4  6E96               	movwf	150,c	;volatile
   488  0002B6                     
   489                           ; BSR set to: 57
   490                           ;src/HIL/hil_pwm.c: 102:     T6CON = 0x00;
   491  0002B6  0E00               	movlw	0
   492  0002B8  6E94               	movwf	148,c	;volatile
   493  0002BA                     
   494                           ; BSR set to: 57
   495                           ;src/HIL/hil_pwm.c: 105:     T6CON |= 0x80;
   496  0002BA  8E94               	bsf	148,7,c	;volatile
   497  0002BC                     
   498                           ; BSR set to: 57
   499                           ;src/HIL/hil_pwm.c: 108:     PWM7CON = 0x80;
   500  0002BC  0E80               	movlw	128
   501  0002BE  6E66               	movwf	102,c	;volatile
   502  0002C0                     l227:
   503                           
   504                           ; BSR set to: 57
   505  0002C0  A1A9               	btfss	169,0,b	;volatile
   506  0002C2  EF65  F001         	goto	u121
   507  0002C6  EF67  F001         	goto	u120
   508  0002CA                     u121:
   509  0002CA  EF60  F001         	goto	l227
   510  0002CE                     u120:
   511  0002CE                     
   512                           ; BSR set to: 57
   513                           ;src/HIL/hil_pwm.c: 113:     TRISA &= ~((0x04));
   514  0002CE  94C2               	bcf	194,2,c	;volatile
   515  0002D0                     
   516                           ; BSR set to: 57
   517                           ;src/HIL/hil_pwm.c: 115:     RA2PPS = 0x0F;
   518  0002D0  0E0F               	movlw	15
   519  0002D2  013A               	movlb	58	; () banked
   520  0002D4  6F02               	movwf	2,b	;volatile
   521  0002D6                     
   522                           ; BSR set to: 58
   523  0002D6  0012               	return		;funcret
   524  0002D8                     __end_of_vHILPWM7_Init:
   525                           	opt callstack 0
   526                           
   527 ;; *************** function _vHILPWM7_SetDutyCycle *****************
   528 ;; Defined at:
   529 ;;		line 140 in file "src/HIL/hil_pwm.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  __u16_DutyCy    2    2[COMRAM] unsigned short 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   543 ;;      Params:         2       0       0       0       0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0       0       0
   545 ;;      Temps:          2       0       0       0       0       0       0       0       0
   546 ;;      Totals:         4       0       0       0       0       0       0       0       0
   547 ;;Total ram usage:        4 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;;		_vHILPWM7_Init
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text2
   559  0003BE                     __ptext2:
   560                           	opt callstack 0
   561  0003BE                     _vHILPWM7_SetDutyCycle:
   562                           	opt callstack 28
   563  0003BE                     
   564                           ;src/HIL/hil_pwm.c: 140: void vHILPWM7_SetDutyCycle(uint16_t __u16_DutyCycle);src/HIL/hi
      +                          l_pwm.c: 141: {;src/HIL/hil_pwm.c: 143:     PWM7DCL = (uint8_t)(__u16_DutyCycle << 6U);
   565  0003BE  4003               	rrncf	vHILPWM7_SetDutyCycle@__u16_DutyCycle^0,w,c
   566  0003C0  42E8               	rrncf	wreg,f,c
   567  0003C2  0BC0               	andlw	192
   568  0003C4  6E64               	movwf	100,c	;volatile
   569                           
   570                           ;src/HIL/hil_pwm.c: 145:     PWM7DCH = (uint8_t)(__u16_DutyCycle >> 2U);
   571  0003C6  0060  F00C  F005   	movff	vHILPWM7_SetDutyCycle@__u16_DutyCycle,??_vHILPWM7_SetDutyCycle
   572  0003CC  0060  F010  F006   	movff	vHILPWM7_SetDutyCycle@__u16_DutyCycle+1,??_vHILPWM7_SetDutyCycle+1
   573  0003D2  90D8               	bcf	status,0,c
   574  0003D4  3206               	rrcf	(??_vHILPWM7_SetDutyCycle+1)^0,f,c
   575  0003D6  3205               	rrcf	??_vHILPWM7_SetDutyCycle^0,f,c
   576  0003D8  90D8               	bcf	status,0,c
   577  0003DA  3206               	rrcf	(??_vHILPWM7_SetDutyCycle+1)^0,f,c
   578  0003DC  3205               	rrcf	??_vHILPWM7_SetDutyCycle^0,f,c
   579  0003DE  5005               	movf	??_vHILPWM7_SetDutyCycle^0,w,c
   580  0003E0  6E65               	movwf	101,c	;volatile
   581  0003E2  0012               	return		;funcret
   582  0003E4                     __end_of_vHILPWM7_SetDutyCycle:
   583                           	opt callstack 0
   584                           
   585 ;; *************** function _vHILPWM6_Init *****************
   586 ;; Defined at:
   587 ;;		line 48 in file "src/HIL/hil_pwm.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         0       0       0       0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		_vHILPWM6_SetDutyCycle
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text3
   616  0002D8                     __ptext3:
   617                           	opt callstack 0
   618  0002D8                     _vHILPWM6_Init:
   619                           	opt callstack 27
   620  0002D8                     
   621                           ;src/HIL/hil_pwm.c: 51:     PWM6CON = 0x00;
   622  0002D8  0E00               	movlw	0
   623  0002DA  6E6A               	movwf	106,c	;volatile
   624                           
   625                           ;src/HIL/hil_pwm.c: 54:     T4PR = 50U;
   626  0002DC  0E32               	movlw	50
   627  0002DE  6E9F               	movwf	159,c	;volatile
   628  0002E0                     
   629                           ;src/HIL/hil_pwm.c: 57:     vHILPWM6_SetDutyCycle((102U));
   630  0002E0  0E00               	movlw	0
   631  0002E2  6E04               	movwf	(vHILPWM6_SetDutyCycle@__u16_DutyCycle+1)^0,c
   632  0002E4  0E66               	movlw	102
   633  0002E6  6E03               	movwf	vHILPWM6_SetDutyCycle@__u16_DutyCycle^0,c
   634  0002E8  ECF2  F001         	call	_vHILPWM6_SetDutyCycle	;wreg free
   635  0002EC                     
   636                           ;src/HIL/hil_pwm.c: 60:     PIR7 &= ~(0x01);
   637  0002EC  0139               	movlb	57	; () banked
   638  0002EE  91A7               	bcf	167,0,b	;volatile
   639  0002F0                     
   640                           ; BSR set to: 57
   641                           ;src/HIL/hil_pwm.c: 63:     T4CLK = 0x01;
   642  0002F0  0E01               	movlw	1
   643  0002F2  6EA2               	movwf	162,c	;volatile
   644  0002F4                     
   645                           ; BSR set to: 57
   646                           ;src/HIL/hil_pwm.c: 66:     T4CON = 0x00;
   647  0002F4  0E00               	movlw	0
   648  0002F6  6EA0               	movwf	160,c	;volatile
   649  0002F8                     
   650                           ; BSR set to: 57
   651                           ;src/HIL/hil_pwm.c: 69:     T4CON |= 0x80;
   652  0002F8  8EA0               	bsf	160,7,c	;volatile
   653  0002FA                     
   654                           ; BSR set to: 57
   655                           ;src/HIL/hil_pwm.c: 72:     PWM6CON = 0x80;
   656  0002FA  0E80               	movlw	128
   657  0002FC  6E6A               	movwf	106,c	;volatile
   658  0002FE                     l221:
   659                           
   660                           ; BSR set to: 57
   661  0002FE  A1A7               	btfss	167,0,b	;volatile
   662  000300  EF84  F001         	goto	u111
   663  000304  EF86  F001         	goto	u110
   664  000308                     u111:
   665  000308  EF7F  F001         	goto	l221
   666  00030C                     u110:
   667  00030C                     
   668                           ; BSR set to: 57
   669                           ;src/HIL/hil_pwm.c: 77:     TRISA &= ~((0x02));
   670  00030C  92C2               	bcf	194,1,c	;volatile
   671  00030E                     
   672                           ; BSR set to: 57
   673                           ;src/HIL/hil_pwm.c: 79:     RA1PPS = 0x0E;
   674  00030E  0E0E               	movlw	14
   675  000310  013A               	movlb	58	; () banked
   676  000312  6F01               	movwf	1,b	;volatile
   677  000314                     
   678                           ; BSR set to: 58
   679  000314  0012               	return		;funcret
   680  000316                     __end_of_vHILPWM6_Init:
   681                           	opt callstack 0
   682                           
   683 ;; *************** function _vHILPWM6_SetDutyCycle *****************
   684 ;; Defined at:
   685 ;;		line 130 in file "src/HIL/hil_pwm.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  __u16_DutyCy    2    2[COMRAM] unsigned short 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         2       0       0       0       0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0
   702 ;;      Totals:         4       0       0       0       0       0       0       0       0
   703 ;;Total ram usage:        4 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    2
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;;		_vHILPWM6_Init
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text4
   715  0003E4                     __ptext4:
   716                           	opt callstack 0
   717  0003E4                     _vHILPWM6_SetDutyCycle:
   718                           	opt callstack 28
   719  0003E4                     
   720                           ;src/HIL/hil_pwm.c: 130: void vHILPWM6_SetDutyCycle(uint16_t __u16_DutyCycle);src/HIL/hi
      +                          l_pwm.c: 131: {;src/HIL/hil_pwm.c: 133:     PWM6DCL = (uint8_t)(__u16_DutyCycle << 6U);
   721  0003E4  4003               	rrncf	vHILPWM6_SetDutyCycle@__u16_DutyCycle^0,w,c
   722  0003E6  42E8               	rrncf	wreg,f,c
   723  0003E8  0BC0               	andlw	192
   724  0003EA  6E68               	movwf	104,c	;volatile
   725                           
   726                           ;src/HIL/hil_pwm.c: 135:     PWM6DCH = (uint8_t)(__u16_DutyCycle >> 2U);
   727  0003EC  0060  F00C  F005   	movff	vHILPWM6_SetDutyCycle@__u16_DutyCycle,??_vHILPWM6_SetDutyCycle
   728  0003F2  0060  F010  F006   	movff	vHILPWM6_SetDutyCycle@__u16_DutyCycle+1,??_vHILPWM6_SetDutyCycle+1
   729  0003F8  90D8               	bcf	status,0,c
   730  0003FA  3206               	rrcf	(??_vHILPWM6_SetDutyCycle+1)^0,f,c
   731  0003FC  3205               	rrcf	??_vHILPWM6_SetDutyCycle^0,f,c
   732  0003FE  90D8               	bcf	status,0,c
   733  000400  3206               	rrcf	(??_vHILPWM6_SetDutyCycle+1)^0,f,c
   734  000402  3205               	rrcf	??_vHILPWM6_SetDutyCycle^0,f,c
   735  000404  5005               	movf	??_vHILPWM6_SetDutyCycle^0,w,c
   736  000406  6E69               	movwf	105,c	;volatile
   737  000408  0012               	return		;funcret
   738  00040A                     __end_of_vHILPWM6_SetDutyCycle:
   739                           	opt callstack 0
   740                           
   741 ;; *************** function _vHILPWM5_Init *****************
   742 ;; Defined at:
   743 ;;		line 12 in file "src/HIL/hil_pwm.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         0       0       0       0       0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    3
   764 ;; This function calls:
   765 ;;		_vHILPWM5_SetDutyCycle
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text5
   772  000316                     __ptext5:
   773                           	opt callstack 0
   774  000316                     _vHILPWM5_Init:
   775                           	opt callstack 27
   776  000316                     
   777                           ;src/HIL/hil_pwm.c: 15:     PWM5CON = 0x00;
   778  000316  0E00               	movlw	0
   779  000318  6E6E               	movwf	110,c	;volatile
   780                           
   781                           ;src/HIL/hil_pwm.c: 18:     T2PR = 50U;
   782  00031A  0E32               	movlw	50
   783  00031C  6EAB               	movwf	171,c	;volatile
   784  00031E                     
   785                           ;src/HIL/hil_pwm.c: 21:     vHILPWM5_SetDutyCycle((102U));
   786  00031E  0E00               	movlw	0
   787  000320  6E04               	movwf	(vHILPWM5_SetDutyCycle@__u16_DutyCycle+1)^0,c
   788  000322  0E66               	movlw	102
   789  000324  6E03               	movwf	vHILPWM5_SetDutyCycle@__u16_DutyCycle^0,c
   790  000326  EC05  F002         	call	_vHILPWM5_SetDutyCycle	;wreg free
   791  00032A                     
   792                           ;src/HIL/hil_pwm.c: 24:     PIR4 &= ~(0x04);
   793  00032A  0139               	movlb	57	; () banked
   794  00032C  95A4               	bcf	164,2,b	;volatile
   795  00032E                     
   796                           ; BSR set to: 57
   797                           ;src/HIL/hil_pwm.c: 27:     T2CLK = 0x01;
   798  00032E  0E01               	movlw	1
   799  000330  6EAE               	movwf	174,c	;volatile
   800  000332                     
   801                           ; BSR set to: 57
   802                           ;src/HIL/hil_pwm.c: 30:     T2CON = 0x00;
   803  000332  0E00               	movlw	0
   804  000334  6EAC               	movwf	172,c	;volatile
   805  000336                     
   806                           ; BSR set to: 57
   807                           ;src/HIL/hil_pwm.c: 33:     T2CON |= 0x80;
   808  000336  8EAC               	bsf	172,7,c	;volatile
   809  000338                     
   810                           ; BSR set to: 57
   811                           ;src/HIL/hil_pwm.c: 36:     PWM5CON = 0x80;
   812  000338  0E80               	movlw	128
   813  00033A  6E6E               	movwf	110,c	;volatile
   814  00033C                     l215:
   815                           
   816                           ; BSR set to: 57
   817  00033C  A5A4               	btfss	164,2,b	;volatile
   818  00033E  EFA3  F001         	goto	u101
   819  000342  EFA5  F001         	goto	u100
   820  000346                     u101:
   821  000346  EF9E  F001         	goto	l215
   822  00034A                     u100:
   823  00034A                     
   824                           ; BSR set to: 57
   825                           ;src/HIL/hil_pwm.c: 41:     TRISA &= ~((0x01));
   826  00034A  90C2               	bcf	194,0,c	;volatile
   827  00034C                     
   828                           ; BSR set to: 57
   829                           ;src/HIL/hil_pwm.c: 43:     RA0PPS = 0x0D;
   830  00034C  0E0D               	movlw	13
   831  00034E  013A               	movlb	58	; () banked
   832  000350  6F00               	movwf	0,b	;volatile
   833  000352                     
   834                           ; BSR set to: 58
   835  000352  0012               	return		;funcret
   836  000354                     __end_of_vHILPWM5_Init:
   837                           	opt callstack 0
   838                           
   839 ;; *************** function _vHILPWM5_SetDutyCycle *****************
   840 ;; Defined at:
   841 ;;		line 120 in file "src/HIL/hil_pwm.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  __u16_DutyCy    2    2[COMRAM] unsigned short 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         2       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0
   857 ;;      Temps:          2       0       0       0       0       0       0       0       0
   858 ;;      Totals:         4       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        4 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    2
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;;		_vHILPWM5_Init
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text6
   871  00040A                     __ptext6:
   872                           	opt callstack 0
   873  00040A                     _vHILPWM5_SetDutyCycle:
   874                           	opt callstack 28
   875  00040A                     
   876                           ;src/HIL/hil_pwm.c: 120: void vHILPWM5_SetDutyCycle(uint16_t __u16_DutyCycle);src/HIL/hi
      +                          l_pwm.c: 121: {;src/HIL/hil_pwm.c: 123:     PWM5DCL = (uint8_t)(__u16_DutyCycle << 6U);
   877  00040A  4003               	rrncf	vHILPWM5_SetDutyCycle@__u16_DutyCycle^0,w,c
   878  00040C  42E8               	rrncf	wreg,f,c
   879  00040E  0BC0               	andlw	192
   880  000410  6E6C               	movwf	108,c	;volatile
   881                           
   882                           ;src/HIL/hil_pwm.c: 125:     PWM5DCH = (uint8_t)(__u16_DutyCycle >> 2U);
   883  000412  0060  F00C  F005   	movff	vHILPWM5_SetDutyCycle@__u16_DutyCycle,??_vHILPWM5_SetDutyCycle
   884  000418  0060  F010  F006   	movff	vHILPWM5_SetDutyCycle@__u16_DutyCycle+1,??_vHILPWM5_SetDutyCycle+1
   885  00041E  90D8               	bcf	status,0,c
   886  000420  3206               	rrcf	(??_vHILPWM5_SetDutyCycle+1)^0,f,c
   887  000422  3205               	rrcf	??_vHILPWM5_SetDutyCycle^0,f,c
   888  000424  90D8               	bcf	status,0,c
   889  000426  3206               	rrcf	(??_vHILPWM5_SetDutyCycle+1)^0,f,c
   890  000428  3205               	rrcf	??_vHILPWM5_SetDutyCycle^0,f,c
   891  00042A  5005               	movf	??_vHILPWM5_SetDutyCycle^0,w,c
   892  00042C  6E6D               	movwf	109,c	;volatile
   893  00042E  0012               	return		;funcret
   894  000430                     __end_of_vHILPWM5_SetDutyCycle:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _SYSTEM_Initialize *****************
   898 ;; Defined at:
   899 ;;		line 50 in file "mcc_generated_files/mcc.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    4
   920 ;; This function calls:
   921 ;;		_INTERRUPT_Initialize
   922 ;;		_OSCILLATOR_Initialize
   923 ;;		_PIN_MANAGER_Initialize
   924 ;;		_PMD_Initialize
   925 ;;		_TMR1_Initialize
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text7
   932  000482                     __ptext7:
   933                           	opt callstack 0
   934  000482                     _SYSTEM_Initialize:
   935                           	opt callstack 26
   936  000482                     
   937                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   938  000482  ECAA  F001         	call	_INTERRUPT_Initialize	;wreg free
   939                           
   940                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   941  000486  EC18  F002         	call	_PMD_Initialize	;wreg free
   942                           
   943                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   944  00048A  ECDD  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   945                           
   946                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   947  00048E  EC2A  F002         	call	_OSCILLATOR_Initialize	;wreg free
   948  000492                     
   949                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
   950  000492  EC09  F001         	call	_TMR1_Initialize	;wreg free
   951  000496  0012               	return		;funcret
   952  000498                     __end_of_SYSTEM_Initialize:
   953                           	opt callstack 0
   954                           
   955 ;; *************** function _TMR1_Initialize *****************
   956 ;; Defined at:
   957 ;;		line 65 in file "mcc_generated_files/tmr1.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   971 ;;      Params:         0       0       0       0       0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0
   973 ;;      Temps:          2       0       0       0       0       0       0       0       0
   974 ;;      Totals:         2       0       0       0       0       0       0       0       0
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    3
   978 ;; This function calls:
   979 ;;		_TMR1_SetInterruptHandler
   980 ;; This function is called by:
   981 ;;		_SYSTEM_Initialize
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text8
   986  000212                     __ptext8:
   987                           	opt callstack 0
   988  000212                     _TMR1_Initialize:
   989                           	opt callstack 26
   990  000212                     
   991                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
   992  000212  0E00               	movlw	0
   993  000214  6EB3               	movwf	179,c	;volatile
   994                           
   995                           ;mcc_generated_files/tmr1.c: 73:     T1GATE = 0x00;
   996  000216  0E00               	movlw	0
   997  000218  6EB4               	movwf	180,c	;volatile
   998                           
   999                           ;mcc_generated_files/tmr1.c: 76:     T1CLK = 0x04;
  1000  00021A  0E04               	movlw	4
  1001  00021C  6EB5               	movwf	181,c	;volatile
  1002                           
  1003                           ;mcc_generated_files/tmr1.c: 79:     TMR1H = 0xE1;
  1004  00021E  0EE1               	movlw	225
  1005  000220  6EB1               	movwf	177,c	;volatile
  1006                           
  1007                           ;mcc_generated_files/tmr1.c: 82:     TMR1L = 0xBA;
  1008  000222  0EBA               	movlw	186
  1009  000224  6EB0               	movwf	176,c	;volatile
  1010  000226                     
  1011                           ;mcc_generated_files/tmr1.c: 85:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1012  000226  50B0               	movf	176,w,c	;volatile
  1013  000228  006F FEC4  F005    	movff	16305,??_TMR1_Initialize	;volatile
  1014  00022E  6A06               	clrf	(??_TMR1_Initialize+1)^0,c
  1015  000230  0060  F014  F006   	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1016  000236  6A05               	clrf	??_TMR1_Initialize^0,c
  1017  000238  1005               	iorwf	??_TMR1_Initialize^0,w,c
  1018  00023A  6E11               	movwf	_timer1ReloadVal^0,c	;volatile
  1019  00023C  5006               	movf	(??_TMR1_Initialize+1)^0,w,c
  1020  00023E  6E12               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  1021  000240                     
  1022                           ;mcc_generated_files/tmr1.c: 88:     PIR4bits.TMR1IF = 0;
  1023  000240  0139               	movlb	57	; () banked
  1024  000242  91A4               	bcf	164,0,b	;volatile
  1025  000244                     
  1026                           ; BSR set to: 57
  1027                           ;mcc_generated_files/tmr1.c: 91:     PIE4bits.TMR1IE = 1;
  1028  000244  8194               	bsf	148,0,b	;volatile
  1029  000246                     
  1030                           ; BSR set to: 57
  1031                           ;mcc_generated_files/tmr1.c: 94:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1032  000246  0EA6               	movlw	low _TMR1_DefaultInterruptHandler
  1033  000248  6E03               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1034  00024A  0E04               	movlw	high _TMR1_DefaultInterruptHandler
  1035  00024C  6E04               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1036  00024E  EC4C  F002         	call	_TMR1_SetInterruptHandler	;wreg free
  1037  000252                     
  1038                           ;mcc_generated_files/tmr1.c: 97:     T1CON = 0x31;
  1039  000252  0E31               	movlw	49
  1040  000254  6EB2               	movwf	178,c	;volatile
  1041  000256  0012               	return		;funcret
  1042  000258                     __end_of_TMR1_Initialize:
  1043                           	opt callstack 0
  1044                           
  1045 ;; *************** function _TMR1_SetInterruptHandler *****************
  1046 ;; Defined at:
  1047 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1050 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    2
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_TMR1_Initialize
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text9
  1077  000498                     __ptext9:
  1078                           	opt callstack 0
  1079  000498                     _TMR1_SetInterruptHandler:
  1080                           	opt callstack 26
  1081  000498                     
  1082                           ;mcc_generated_files/tmr1.c: 180:     TMR1_InterruptHandler = InterruptHandler;
  1083  000498  0060  F00C  F00F   	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1084  00049E  0060  F010  F010   	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1085  0004A4  0012               	return		;funcret
  1086  0004A6                     __end_of_TMR1_SetInterruptHandler:
  1087                           	opt callstack 0
  1088                           
  1089 ;; *************** function _PMD_Initialize *****************
  1090 ;; Defined at:
  1091 ;;		line 73 in file "mcc_generated_files/mcc.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    2
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_SYSTEM_Initialize
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text10
  1120  000430                     __ptext10:
  1121                           	opt callstack 0
  1122  000430                     _PMD_Initialize:
  1123                           	opt callstack 27
  1124  000430                     
  1125                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  1126  000430  0E00               	movlw	0
  1127  000432  0139               	movlb	57	; () banked
  1128  000434  6FC0               	movwf	192,b	;volatile
  1129                           
  1130                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  1131  000436  0E00               	movlw	0
  1132  000438  6FC1               	movwf	193,b	;volatile
  1133                           
  1134                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  1135  00043A  0E00               	movlw	0
  1136  00043C  6FC2               	movwf	194,b	;volatile
  1137                           
  1138                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  1139  00043E  0E00               	movlw	0
  1140  000440  6FC3               	movwf	195,b	;volatile
  1141                           
  1142                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  1143  000442  0E00               	movlw	0
  1144  000444  6FC4               	movwf	196,b	;volatile
  1145                           
  1146                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  1147  000446  0E00               	movlw	0
  1148  000448  6FC5               	movwf	197,b	;volatile
  1149                           
  1150                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  1151  00044A  0E00               	movlw	0
  1152  00044C  6FC6               	movwf	198,b	;volatile
  1153                           
  1154                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  1155  00044E  0E00               	movlw	0
  1156  000450  6FC7               	movwf	199,b	;volatile
  1157  000452                     
  1158                           ; BSR set to: 57
  1159  000452  0012               	return		;funcret
  1160  000454                     __end_of_PMD_Initialize:
  1161                           	opt callstack 0
  1162                           
  1163 ;; *************** function _PIN_MANAGER_Initialize *****************
  1164 ;; Defined at:
  1165 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_SYSTEM_Initialize
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text11
  1194  0001BA                     __ptext11:
  1195                           	opt callstack 0
  1196  0001BA                     _PIN_MANAGER_Initialize:
  1197                           	opt callstack 27
  1198  0001BA                     
  1199                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1200  0001BA  0E00               	movlw	0
  1201  0001BC  6EBA               	movwf	186,c	;volatile
  1202                           
  1203                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1204  0001BE  0E00               	movlw	0
  1205  0001C0  6EBB               	movwf	187,c	;volatile
  1206                           
  1207                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1208  0001C2  0E00               	movlw	0
  1209  0001C4  6EBC               	movwf	188,c	;volatile
  1210  0001C6                     
  1211                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  1212  0001C6  68C2               	setf	194,c	;volatile
  1213  0001C8                     
  1214                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1215  0001C8  68C3               	setf	195,c	;volatile
  1216  0001CA                     
  1217                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  1218  0001CA  68C4               	setf	196,c	;volatile
  1219  0001CC                     
  1220                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  1221  0001CC  013A               	movlb	58	; () banked
  1222  0001CE  6960               	setf	96,b	;volatile
  1223  0001D0                     
  1224                           ; BSR set to: 58
  1225                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  1226  0001D0  6950               	setf	80,b	;volatile
  1227  0001D2                     
  1228                           ; BSR set to: 58
  1229                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  1230  0001D2  6940               	setf	64,b	;volatile
  1231                           
  1232                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1233  0001D4  0E00               	movlw	0
  1234  0001D6  6F81               	movwf	129,b	;volatile
  1235                           
  1236                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1237  0001D8  0E00               	movlw	0
  1238  0001DA  6F51               	movwf	81,b	;volatile
  1239                           
  1240                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1241  0001DC  0E00               	movlw	0
  1242  0001DE  6F41               	movwf	65,b	;volatile
  1243                           
  1244                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1245  0001E0  0E00               	movlw	0
  1246  0001E2  6F61               	movwf	97,b	;volatile
  1247                           
  1248                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
  1249  0001E4  0E00               	movlw	0
  1250  0001E6  6F5A               	movwf	90,b	;volatile
  1251                           
  1252                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
  1253  0001E8  0E00               	movlw	0
  1254  0001EA  6F5B               	movwf	91,b	;volatile
  1255                           
  1256                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
  1257  0001EC  0E00               	movlw	0
  1258  0001EE  6F6A               	movwf	106,b	;volatile
  1259                           
  1260                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
  1261  0001F0  0E00               	movlw	0
  1262  0001F2  6F6B               	movwf	107,b	;volatile
  1263                           
  1264                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1265  0001F4  0E00               	movlw	0
  1266  0001F6  6F42               	movwf	66,b	;volatile
  1267                           
  1268                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1269  0001F8  0E00               	movlw	0
  1270  0001FA  6F52               	movwf	82,b	;volatile
  1271                           
  1272                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1273  0001FC  0E00               	movlw	0
  1274  0001FE  6F62               	movwf	98,b	;volatile
  1275  000200                     
  1276                           ; BSR set to: 58
  1277                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
  1278  000200  6943               	setf	67,b	;volatile
  1279  000202                     
  1280                           ; BSR set to: 58
  1281                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
  1282  000202  6953               	setf	83,b	;volatile
  1283  000204                     
  1284                           ; BSR set to: 58
  1285                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
  1286  000204  6963               	setf	99,b	;volatile
  1287  000206                     
  1288                           ; BSR set to: 58
  1289                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
  1290  000206  6944               	setf	68,b	;volatile
  1291  000208                     
  1292                           ; BSR set to: 58
  1293                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
  1294  000208  6954               	setf	84,b	;volatile
  1295  00020A                     
  1296                           ; BSR set to: 58
  1297                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
  1298  00020A  6964               	setf	100,b	;volatile
  1299                           
  1300                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
  1301  00020C  0E08               	movlw	8
  1302  00020E  6F84               	movwf	132,b	;volatile
  1303  000210                     
  1304                           ; BSR set to: 58
  1305  000210  0012               	return		;funcret
  1306  000212                     __end_of_PIN_MANAGER_Initialize:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function _OSCILLATOR_Initialize *****************
  1310 ;; Defined at:
  1311 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_SYSTEM_Initialize
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text12
  1340  000454                     __ptext12:
  1341                           	opt callstack 0
  1342  000454                     _OSCILLATOR_Initialize:
  1343                           	opt callstack 27
  1344  000454                     
  1345                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  1346  000454  0E62               	movlw	98
  1347  000456  0139               	movlb	57	; () banked
  1348  000458  6FD9               	movwf	217,b	;volatile
  1349                           
  1350                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  1351  00045A  0E00               	movlw	0
  1352  00045C  6FDB               	movwf	219,b	;volatile
  1353                           
  1354                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  1355  00045E  0E00               	movlw	0
  1356  000460  6FDD               	movwf	221,b	;volatile
  1357                           
  1358                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x05;
  1359  000462  0E05               	movlw	5
  1360  000464  6FDF               	movwf	223,b	;volatile
  1361                           
  1362                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  1363  000466  0E00               	movlw	0
  1364  000468  6FDE               	movwf	222,b	;volatile
  1365  00046A                     
  1366                           ; BSR set to: 57
  1367  00046A  0012               	return		;funcret
  1368  00046C                     __end_of_OSCILLATOR_Initialize:
  1369                           	opt callstack 0
  1370                           
  1371 ;; *************** function _INTERRUPT_Initialize *****************
  1372 ;; Defined at:
  1373 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  state           1    2[COMRAM] _Bool 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_SYSTEM_Initialize
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text13
  1402  000354                     __ptext13:
  1403                           	opt callstack 0
  1404  000354                     _INTERRUPT_Initialize:
  1405                           	opt callstack 27
  1406  000354                     
  1407                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  1408  000354  8AD2               	bsf	210,5,c	;volatile
  1409  000356                     
  1410                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  1411  000356  0E00               	movlw	0
  1412  000358  BED2               	btfsc	16338,7,c	;volatile
  1413  00035A  0E01               	movlw	1
  1414  00035C  6E03               	movwf	INTERRUPT_Initialize@state^0,c
  1415  00035E                     
  1416                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  1417  00035E  9ED2               	bcf	16338,7,c	;volatile
  1418                           
  1419                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  1420  000360  0E55               	movlw	85
  1421  000362  6ED4               	movwf	212,c	;volatile
  1422                           
  1423                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  1424  000364  0EAA               	movlw	170
  1425  000366  6ED4               	movwf	212,c	;volatile
  1426  000368                     
  1427                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  1428  000368  90D4               	bcf	212,0,c	;volatile
  1429                           
  1430                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  1431  00036A  0E00               	movlw	0
  1432  00036C  0138               	movlb	56	; () banked
  1433  00036E  6F9F               	movwf	159,b	;volatile
  1434                           
  1435                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  1436  000370  0E00               	movlw	0
  1437  000372  6F9E               	movwf	158,b	;volatile
  1438                           
  1439                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  1440  000374  0E08               	movlw	8
  1441  000376  6F9D               	movwf	157,b	;volatile
  1442                           
  1443                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  1444  000378  0E55               	movlw	85
  1445  00037A  6ED4               	movwf	212,c	;volatile
  1446                           
  1447                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  1448  00037C  0EAA               	movlw	170
  1449  00037E  6ED4               	movwf	212,c	;volatile
  1450  000380                     
  1451                           ; BSR set to: 56
  1452                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  1453  000380  80D4               	bsf	212,0,c	;volatile
  1454  000382                     
  1455                           ; BSR set to: 56
  1456                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  1457  000382  B003               	btfsc	INTERRUPT_Initialize@state^0,0,c
  1458  000384  D002               	bra	u15
  1459  000386  9ED2               	bcf	16338,7,c	;volatile
  1460  000388  D001               	bra	u16
  1461  00038A                     u15:
  1462  00038A  8ED2               	bsf	16338,7,c	;volatile
  1463  00038C                     u16:
  1464  00038C                     
  1465                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR4bits.TMR1IP = 1;
  1466  00038C  0139               	movlb	57	; () banked
  1467  00038E  8184               	bsf	132,0,b	;volatile
  1468  000390                     
  1469                           ; BSR set to: 57
  1470  000390  0012               	return		;funcret
  1471  000392                     __end_of_INTERRUPT_Initialize:
  1472                           	opt callstack 0
  1473                           
  1474 ;; *************** function _TMR1_ISR *****************
  1475 ;; Defined at:
  1476 ;;		line 165 in file "mcc_generated_files/tmr1.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		Absolute function
  1499 ;;		_TMR1_DefaultInterruptHandler
  1500 ;;		_TMR1_WriteTimer
  1501 ;; This function is called by:
  1502 ;;		Interrupt level 2
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text14
  1507  000258                     __ptext14:
  1508                           	opt callstack 0
  1509  000258                     _TMR1_ISR:
  1510                           	opt callstack 26
  1511  000258                     
  1512                           ;mcc_generated_files/tmr1.c: 169:     PIR4bits.TMR1IF = 0;
  1513  000258  0139               	movlb	57	; () banked
  1514  00025A  91A4               	bcf	164,0,b	;volatile
  1515  00025C                     
  1516                           ; BSR set to: 57
  1517                           ;mcc_generated_files/tmr1.c: 170:     TMR1_WriteTimer(timer1ReloadVal);
  1518  00025C  0060  F044  F001   	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  1519  000262  0060  F048  F002   	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  1520  000268  ECC9  F001         	call	_TMR1_WriteTimer	;wreg free
  1521  00026C                     
  1522                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  1523  00026C  500F               	movf	_TMR1_InterruptHandler^0,w,c
  1524  00026E  1010               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  1525  000270  B4D8               	btfsc	status,2,c
  1526  000272  EF3D  F001         	goto	i2u16_41
  1527  000276  EF3F  F001         	goto	i2u16_40
  1528  00027A                     i2u16_41:
  1529  00027A  EF4C  F001         	goto	i2l299
  1530  00027E                     i2u16_40:
  1531  00027E                     
  1532                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  1533  00027E  D802               	call	i2u17_48
  1534  000280  EF4C  F001         	goto	i2u17_49
  1535  000284                     i2u17_48:
  1536  000284  0005               	push	
  1537  000286  6EFA               	movwf	pclath,c
  1538  000288  500F               	movf	_TMR1_InterruptHandler^0,w,c
  1539  00028A  6EFD               	movwf	tosl,c
  1540  00028C  5010               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  1541  00028E  6EFE               	movwf	tosh,c
  1542  000290  50F8               	movf	tblptru,w,c
  1543  000292  6EFF               	movwf	tosu,c
  1544  000294  50FA               	movf	pclath,w,c
  1545  000296  0012               	return		;indir
  1546  000298                     i2u17_49:
  1547  000298                     i2l299:
  1548  000298  0011               	retfie		f
  1549  00029A                     __end_of_TMR1_ISR:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _TMR1_WriteTimer *****************
  1553 ;; Defined at:
  1554 ;;		line 128 in file "mcc_generated_files/tmr1.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  timerVal        2    0[COMRAM] unsigned short 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_TMR1_ISR
  1578 ;;		_TMR1_Reload
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text15
  1583  000392                     __ptext15:
  1584                           	opt callstack 0
  1585  000392                     _TMR1_WriteTimer:
  1586                           	opt callstack 26
  1587  000392                     
  1588                           ;mcc_generated_files/tmr1.c: 128: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 129: {;mcc_generated_files/tmr1.c: 130:     if (T1CONbits.NOT_SYNC == 1)
  1589  000392  A4B2               	btfss	178,2,c	;volatile
  1590  000394  EFCE  F001         	goto	i2u13_41
  1591  000398  EFD0  F001         	goto	i2u13_40
  1592  00039C                     i2u13_41:
  1593  00039C  EFD9  F001         	goto	i2l1289
  1594  0003A0                     i2u13_40:
  1595  0003A0                     
  1596                           ;mcc_generated_files/tmr1.c: 131:     {;mcc_generated_files/tmr1.c: 133:         T1CONbi
      +                          ts.TMR1ON = 0;
  1597  0003A0  90B2               	bcf	178,0,c	;volatile
  1598  0003A2                     
  1599                           ;mcc_generated_files/tmr1.c: 136:         TMR1H = (timerVal >> 8);
  1600  0003A2  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  1601  0003A4  6EB1               	movwf	177,c	;volatile
  1602  0003A6                     
  1603                           ;mcc_generated_files/tmr1.c: 137:         TMR1L = timerVal;
  1604  0003A6  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
  1605  0003AC                     
  1606                           ;mcc_generated_files/tmr1.c: 140:         T1CONbits.TMR1ON =1;
  1607  0003AC  80B2               	bsf	178,0,c	;volatile
  1608                           
  1609                           ;mcc_generated_files/tmr1.c: 141:     }
  1610  0003AE  EFDE  F001         	goto	i2l284
  1611  0003B2                     i2l1289:
  1612                           
  1613                           ;mcc_generated_files/tmr1.c: 143:     {;mcc_generated_files/tmr1.c: 145:         TMR1H =
      +                           (timerVal >> 8);
  1614  0003B2  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  1615  0003B4  6EB1               	movwf	177,c	;volatile
  1616  0003B6                     
  1617                           ;mcc_generated_files/tmr1.c: 146:         TMR1L = timerVal;
  1618  0003B6  0060  F007  FFB0   	movff	TMR1_WriteTimer@timerVal,16304	;volatile
  1619  0003BC                     i2l284:
  1620  0003BC  0012               	return		;funcret
  1621  0003BE                     __end_of_TMR1_WriteTimer:
  1622                           	opt callstack 0
  1623                           
  1624 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  1625 ;; Defined at:
  1626 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		None
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_TMR1_Initialize
  1650 ;;		_TMR1_ISR
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text16
  1655  0004A6                     __ptext16:
  1656                           	opt callstack 0
  1657  0004A6                     _TMR1_DefaultInterruptHandler:
  1658                           	opt callstack 26
  1659  0004A6  0012               	return		;funcret
  1660  0004A8                     __end_of_TMR1_DefaultInterruptHandler:
  1661                           	opt callstack 0
  1662                           
  1663 ;; *************** function _Default_ISR *****************
  1664 ;; Defined at:
  1665 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		None
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		Interrupt level 2
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text17
  1693  0004A8                     __ptext17:
  1694                           	opt callstack 0
  1695  0004A8                     _Default_ISR:
  1696                           	opt callstack 27
  1697  0004A8  0011               	retfie		f
  1698  0004AA                     __end_of_Default_ISR:
  1699                           	opt callstack 0
  1700                           
  1701                           ;
  1702                           ; Interrupt Vector Table @ 0x8
  1703                           ;
  1704                           
  1705                           	psect	ivt0x8
  1706  000008                     __pivt0x8:
  1707                           	opt callstack 0
  1708  000008                     ivt0x8_base:
  1709                           	opt callstack 0
  1710                           
  1711                           ; Vector 0 : SWINT
  1712  000008  012A               	dw	_Default_ISR shr (0+2)
  1713                           
  1714                           ; Vector 1 : HLVD
  1715  00000A  012A               	dw	_Default_ISR shr (0+2)
  1716                           
  1717                           ; Vector 2 : OSF
  1718  00000C  012A               	dw	_Default_ISR shr (0+2)
  1719                           
  1720                           ; Vector 3 : CSW
  1721  00000E  012A               	dw	_Default_ISR shr (0+2)
  1722                           
  1723                           ; Vector 4 : NVM
  1724  000010  012A               	dw	_Default_ISR shr (0+2)
  1725                           
  1726                           ; Vector 5 : SCAN
  1727  000012  012A               	dw	_Default_ISR shr (0+2)
  1728                           
  1729                           ; Vector 6 : CRC
  1730  000014  012A               	dw	_Default_ISR shr (0+2)
  1731                           
  1732                           ; Vector 7 : IOC
  1733  000016  012A               	dw	_Default_ISR shr (0+2)
  1734                           
  1735                           ; Vector 8 : INT0
  1736  000018  012A               	dw	_Default_ISR shr (0+2)
  1737                           
  1738                           ; Vector 9 : ZCD
  1739  00001A  012A               	dw	_Default_ISR shr (0+2)
  1740                           
  1741                           ; Vector 10 : AD
  1742  00001C  012A               	dw	_Default_ISR shr (0+2)
  1743                           
  1744                           ; Vector 11 : ADT
  1745  00001E  012A               	dw	_Default_ISR shr (0+2)
  1746                           
  1747                           ; Vector 12 : CMP1
  1748  000020  012A               	dw	_Default_ISR shr (0+2)
  1749                           
  1750                           ; Vector 13 : SMT1
  1751  000022  012A               	dw	_Default_ISR shr (0+2)
  1752                           
  1753                           ; Vector 14 : SMT1PRA
  1754  000024  012A               	dw	_Default_ISR shr (0+2)
  1755                           
  1756                           ; Vector 15 : SMT1PRW
  1757  000026  012A               	dw	_Default_ISR shr (0+2)
  1758                           
  1759                           ; Vector 16 : DMA1SCNT
  1760  000028  012A               	dw	_Default_ISR shr (0+2)
  1761                           
  1762                           ; Vector 17 : DMA1DCNT
  1763  00002A  012A               	dw	_Default_ISR shr (0+2)
  1764                           
  1765                           ; Vector 18 : DMA1OR
  1766  00002C  012A               	dw	_Default_ISR shr (0+2)
  1767                           
  1768                           ; Vector 19 : DMA1A
  1769  00002E  012A               	dw	_Default_ISR shr (0+2)
  1770                           
  1771                           ; Vector 20 : SPI1RX
  1772  000030  012A               	dw	_Default_ISR shr (0+2)
  1773                           
  1774                           ; Vector 21 : SPI1TX
  1775  000032  012A               	dw	_Default_ISR shr (0+2)
  1776                           
  1777                           ; Vector 22 : SPI1
  1778  000034  012A               	dw	_Default_ISR shr (0+2)
  1779                           
  1780                           ; Vector 23 : I2C1RX
  1781  000036  012A               	dw	_Default_ISR shr (0+2)
  1782                           
  1783                           ; Vector 24 : I2C1TX
  1784  000038  012A               	dw	_Default_ISR shr (0+2)
  1785                           
  1786                           ; Vector 25 : I2C1
  1787  00003A  012A               	dw	_Default_ISR shr (0+2)
  1788                           
  1789                           ; Vector 26 : I2C1E
  1790  00003C  012A               	dw	_Default_ISR shr (0+2)
  1791                           
  1792                           ; Vector 27 : U1RX
  1793  00003E  012A               	dw	_Default_ISR shr (0+2)
  1794                           
  1795                           ; Vector 28 : U1TX
  1796  000040  012A               	dw	_Default_ISR shr (0+2)
  1797                           
  1798                           ; Vector 29 : U1E
  1799  000042  012A               	dw	_Default_ISR shr (0+2)
  1800                           
  1801                           ; Vector 30 : U1
  1802  000044  012A               	dw	_Default_ISR shr (0+2)
  1803                           
  1804                           ; Vector 31 : TMR0
  1805  000046  012A               	dw	_Default_ISR shr (0+2)
  1806                           
  1807                           ; Vector 32 : TMR1
  1808  000048  0096               	dw	_TMR1_ISR shr (0+2)
  1809                           
  1810                           ; Vector 33 : TMR1G
  1811  00004A  012A               	dw	_Default_ISR shr (0+2)
  1812                           
  1813                           ; Vector 34 : TMR2
  1814  00004C  012A               	dw	_Default_ISR shr (0+2)
  1815                           
  1816                           ; Vector 35 : CCP1
  1817  00004E  012A               	dw	_Default_ISR shr (0+2)
  1818                           
  1819                           ; Vector 36 : Undefined
  1820  000050  002B               	dw	ivt0x8_undefint shr (0+2)
  1821                           
  1822                           ; Vector 37 : NCO1
  1823  000052  012A               	dw	_Default_ISR shr (0+2)
  1824                           
  1825                           ; Vector 38 : CWG1
  1826  000054  012A               	dw	_Default_ISR shr (0+2)
  1827                           
  1828                           ; Vector 39 : CLC1
  1829  000056  012A               	dw	_Default_ISR shr (0+2)
  1830                           
  1831                           ; Vector 40 : INT1
  1832  000058  012A               	dw	_Default_ISR shr (0+2)
  1833                           
  1834                           ; Vector 41 : CMP2
  1835  00005A  012A               	dw	_Default_ISR shr (0+2)
  1836                           
  1837                           ; Vector 42 : DMA2SCNT
  1838  00005C  012A               	dw	_Default_ISR shr (0+2)
  1839                           
  1840                           ; Vector 43 : DMA2DCNT
  1841  00005E  012A               	dw	_Default_ISR shr (0+2)
  1842                           
  1843                           ; Vector 44 : DMA2OR
  1844  000060  012A               	dw	_Default_ISR shr (0+2)
  1845                           
  1846                           ; Vector 45 : DMA2A
  1847  000062  012A               	dw	_Default_ISR shr (0+2)
  1848                           
  1849                           ; Vector 46 : I2C2RX
  1850  000064  012A               	dw	_Default_ISR shr (0+2)
  1851                           
  1852                           ; Vector 47 : I2C2TX
  1853  000066  012A               	dw	_Default_ISR shr (0+2)
  1854                           
  1855                           ; Vector 48 : I2C2
  1856  000068  012A               	dw	_Default_ISR shr (0+2)
  1857                           
  1858                           ; Vector 49 : I2C2E
  1859  00006A  012A               	dw	_Default_ISR shr (0+2)
  1860                           
  1861                           ; Vector 50 : U2RX
  1862  00006C  012A               	dw	_Default_ISR shr (0+2)
  1863                           
  1864                           ; Vector 51 : U2TX
  1865  00006E  012A               	dw	_Default_ISR shr (0+2)
  1866                           
  1867                           ; Vector 52 : U2E
  1868  000070  012A               	dw	_Default_ISR shr (0+2)
  1869                           
  1870                           ; Vector 53 : U2
  1871  000072  012A               	dw	_Default_ISR shr (0+2)
  1872                           
  1873                           ; Vector 54 : TMR3
  1874  000074  012A               	dw	_Default_ISR shr (0+2)
  1875                           
  1876                           ; Vector 55 : TMR3G
  1877  000076  012A               	dw	_Default_ISR shr (0+2)
  1878                           
  1879                           ; Vector 56 : TMR4
  1880  000078  012A               	dw	_Default_ISR shr (0+2)
  1881                           
  1882                           ; Vector 57 : CCP2
  1883  00007A  012A               	dw	_Default_ISR shr (0+2)
  1884                           
  1885                           ; Vector 58 : Undefined
  1886  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
  1887                           
  1888                           ; Vector 59 : CWG2
  1889  00007E  012A               	dw	_Default_ISR shr (0+2)
  1890                           
  1891                           ; Vector 60 : CLC2
  1892  000080  012A               	dw	_Default_ISR shr (0+2)
  1893                           
  1894                           ; Vector 61 : INT2
  1895  000082  012A               	dw	_Default_ISR shr (0+2)
  1896                           
  1897                           ; Vector 62 : Undefined
  1898  000084  002B               	dw	ivt0x8_undefint shr (0+2)
  1899                           
  1900                           ; Vector 63 : Undefined
  1901  000086  002B               	dw	ivt0x8_undefint shr (0+2)
  1902                           
  1903                           ; Vector 64 : Undefined
  1904  000088  002B               	dw	ivt0x8_undefint shr (0+2)
  1905                           
  1906                           ; Vector 65 : Undefined
  1907  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
  1908                           
  1909                           ; Vector 66 : Undefined
  1910  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
  1911                           
  1912                           ; Vector 67 : Undefined
  1913  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
  1914                           
  1915                           ; Vector 68 : Undefined
  1916  000090  002B               	dw	ivt0x8_undefint shr (0+2)
  1917                           
  1918                           ; Vector 69 : Undefined
  1919  000092  002B               	dw	ivt0x8_undefint shr (0+2)
  1920                           
  1921                           ; Vector 70 : TMR5
  1922  000094  012A               	dw	_Default_ISR shr (0+2)
  1923                           
  1924                           ; Vector 71 : TMR5G
  1925  000096  012A               	dw	_Default_ISR shr (0+2)
  1926                           
  1927                           ; Vector 72 : TMR6
  1928  000098  012A               	dw	_Default_ISR shr (0+2)
  1929                           
  1930                           ; Vector 73 : CCP3
  1931  00009A  012A               	dw	_Default_ISR shr (0+2)
  1932                           
  1933                           ; Vector 74 : CWG3
  1934  00009C  012A               	dw	_Default_ISR shr (0+2)
  1935                           
  1936                           ; Vector 75 : CLC3
  1937  00009E  012A               	dw	_Default_ISR shr (0+2)
  1938                           
  1939                           ; Vector 76 : Undefined
  1940  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
  1941                           
  1942                           ; Vector 77 : Undefined
  1943  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
  1944                           
  1945                           ; Vector 78 : Undefined
  1946  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
  1947                           
  1948                           ; Vector 79 : Undefined
  1949  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
  1950                           
  1951                           ; Vector 80 : CCP4
  1952  0000A8  012A               	dw	_Default_ISR shr (0+2)
  1953                           
  1954                           ; Vector 81 : CLC4
  1955  0000AA  012A               	dw	_Default_ISR shr (0+2)
  1956  0000AC                     ivt0x8_undefint:
  1957                           	opt callstack 0
  1958  0000AC  00FF               	reset	
  1959  0000                     
  1960                           	psect	text18
  1961  000000                     __ptext18:
  1962                           	opt callstack 0
  1963  000000                     
  1964                           	psect	rparam
  1965  0000                     tosu	equ	0x3FFF
  1966                           tosh	equ	0x3FFE
  1967                           tosl	equ	0x3FFD
  1968                           stkptr	equ	0x3FFC
  1969                           pclatu	equ	0x3FFB
  1970                           pclath	equ	0x3FFA
  1971                           pcl	equ	0x3FF9
  1972                           tblptru	equ	0x3FF8
  1973                           tblptrh	equ	0x3FF7
  1974                           tblptrl	equ	0x3FF6
  1975                           tablat	equ	0x3FF5
  1976                           prodh	equ	0x3FF4
  1977                           prodl	equ	0x3FF3
  1978                           indf0	equ	0x3FEF
  1979                           postinc0	equ	0x3FEE
  1980                           postdec0	equ	0x3FED
  1981                           preinc0	equ	0x3FEC
  1982                           plusw0	equ	0x3FEB
  1983                           fsr0h	equ	0x3FEA
  1984                           fsr0l	equ	0x3FE9
  1985                           wreg	equ	0x3FE8
  1986                           indf1	equ	0x3FE7
  1987                           postinc1	equ	0x3FE6
  1988                           postdec1	equ	0x3FE5
  1989                           preinc1	equ	0x3FE4
  1990                           plusw1	equ	0x3FE3
  1991                           fsr1h	equ	0x3FE2
  1992                           fsr1l	equ	0x3FE1
  1993                           bsr	equ	0x3FE0
  1994                           indf2	equ	0x3FDF
  1995                           postinc2	equ	0x3FDE
  1996                           postdec2	equ	0x3FDD
  1997                           preinc2	equ	0x3FDC
  1998                           plusw2	equ	0x3FDB
  1999                           fsr2h	equ	0x3FDA
  2000                           fsr2l	equ	0x3FD9
  2001                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_vHILPWM5_SetDutyCycle
    _main->_vHILPWM6_SetDutyCycle
    _main->_vHILPWM7_SetDutyCycle
    _vHILPWM7_Init->_vHILPWM7_SetDutyCycle
    _vHILPWM6_Init->_vHILPWM6_SetDutyCycle
    _vHILPWM5_Init->_vHILPWM5_SetDutyCycle
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _TMR1_ISR in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2015
                                              6 COMRAM     8     8      0
                  _SYSTEM_Initialize
                      _vHILPWM5_Init
              _vHILPWM5_SetDutyCycle
                      _vHILPWM6_Init
              _vHILPWM6_SetDutyCycle
                      _vHILPWM7_Init
              _vHILPWM7_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM7_Init                                        0     0      0     272
              _vHILPWM7_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM7_SetDutyCycle                                4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vHILPWM6_Init                                        0     0      0     272
              _vHILPWM6_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM6_SetDutyCycle                                4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vHILPWM5_Init                                        0     0      0     272
              _vHILPWM5_SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _vHILPWM5_SetDutyCycle                                4     2      2     272
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     113
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Default_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _vHILPWM5_Init
     _vHILPWM5_SetDutyCycle
   _vHILPWM5_SetDutyCycle
   _vHILPWM6_Init
     _vHILPWM6_SetDutyCycle
   _vHILPWM6_SetDutyCycle
   _vHILPWM7_Init
     _vHILPWM7_SetDutyCycle
   _vHILPWM7_SetDutyCycle

 _TMR1_ISR (ROOT)
   Absolute function(Fake) *
   _TMR1_DefaultInterruptHandler *
   _TMR1_WriteTimer *

 _Default_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E      12       1       18.9%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
ABS                  0      0      12      19        0.0%
BIGRAM             7FF      0       0      20        0.0%
DATA                 0      0      12      21        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 06 12:34:45 2020

                             __CFG_CP$OFF 000000                                        l42 046A  
                                      l45 0452                                        l39 0496  
                                      u15 038A                                        u16 038C  
                             __CFG_LVP$ON 000000                                       l102 0210  
                                     l221 02FE                                       l302 04A4  
                                     l230 02D6                                       l215 033C  
                                     l224 0314                                       l233 042E  
                                     l218 0352                                       l227 02C0  
                                     l324 0390                                       l236 0408  
                                     l270 0256                                       l239 03E2  
                                     _GIE 01FE97                                       u100 034A  
                                     u101 0346                                       u110 030C  
                                     u111 0308                                       u120 02CE  
                                     u121 02CA                                       u140 0144  
                                     u141 0140                                       u150 01B2  
                                     u151 01AE                                       u187 010E  
                                     u197 0186                           _timer1ReloadVal 0011  
                 __size_of_PMD_Initialize 0024                                       tosl 003FFD  
                                     wreg 003FE8                             __CFG_BBEN$OFF 000000  
                 ??_vHILPWM7_SetDutyCycle 0005                              __CFG_ZCD$OFF 000000  
                         ??_vHILPWM5_Init 0007                           ??_vHILPWM6_Init 0007  
          __size_of_vHILPWM5_SetDutyCycle 0026                                      l1011 035E  
                                    l1013 0368                                      l1021 0430  
                                    l1015 0380                                      l1007 0354  
                                    l1031 01CC                                      l1023 01BA  
                                    l1017 0382                                      l1009 0356  
                                    l1041 0204                                      l1033 01D0  
                                    l1025 01C6                                      l1201 0498  
                                    l1019 038C                                      l1043 0206  
                                    l1035 01D2                                      l1027 01C8  
                                    l1211 0246                                      l1203 0212  
                                    l1045 0208                                      l1037 0200  
                                    l1029 01CA                                      l1213 0252  
                                    l1205 0226                                      l1221 0482  
                                    l1301 00CC                                      l1047 020A  
                                    l1039 0202                                      l1207 0240  
                                    l1223 0492                                      l1215 040A  
                                    l1231 032E                                      l1311 0144  
                                    l1303 00D8                                      l1049 0454  
                                    l1209 0244                                      l1241 034C  
                                    l1233 0332                                      l1225 0316  
                                    l1217 03E4                                      l1313 0150  
                                    l1305 0108                                      l1235 0336  
                                    l1227 031E                                      l1251 02F4  
                                    l1243 02D8                                      l1219 03BE  
                                    l1315 0180                                      l1307 0116  
                                    l1237 0338                                      l1229 032A  
                                    l1253 02F8                                      l1245 02E0  
                                    l1261 029A                                      l1317 018E  
                                    l1309 011E                           ??_vHILPWM7_Init 0007  
                                    l1239 034A                                      l1255 02FA  
                                    l1247 02EC                                      l1271 02BA  
                                    l1263 02A2                                      l1319 0196  
                                    l1257 030C                                      l1249 02F0  
                                    l1273 02BC                                      l1265 02AE  
                                    l1259 030E                                      l1275 02CE  
                                    l1267 02B2                                      l1277 02D0  
                                    l1269 02B6                                      l1293 00B2  
                                    l1295 00C2                                      l1297 00C4  
                                    l1299 00C8             __end_of_vHILPWM5_SetDutyCycle 0430  
                                    _LATA 003FBA                                      _LATB 003FBB  
                                    _LATC 003FBC                                      _T2PR 003FAB  
                                    _T4PR 003F9F                                      _T6PR 003F93  
                                    _PMD0 0039C0                                      _PMD1 0039C1  
                                    _PMD2 0039C2                                      _PMD3 0039C3  
                                    _PMD4 0039C4                                      _PMD5 0039C5  
                                    _PMD6 0039C6                                      _PMD7 0039C7  
                                    _PIR4 0039A4                                      _PIR7 0039A7  
                                    _PIR9 0039A9                                      _WPUA 003A41  
                                    _WPUB 003A51                                      _WPUC 003A61  
                                    _WPUE 003A81                             __CFG_FCMEN$ON 000000  
                                    _main 00B2                                      start 00AE  
              ??_TMR1_SetInterruptHandler 0005                             __CFG_CSWEN$ON 000000  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 046C                                     ?_main 0001  
                           __CFG_WDTE$OFF 000000                                     _T1CLK 003FB5  
                                   _T2CLK 003FAE                                     _T1CON 003FB2  
                                   _T2CON 003FAC                                     _T4CLK 003FA2  
                                   _T4CON 003FA0                                     _T6CLK 003F96  
                                   _T6CON 003F94                            __CFG_DEBUG$OFF 000000  
                                   i2l305 04A6                                     i2l329 04A8  
                                   i2l284 03BC                                     i2l299 0298  
                                   _OSCEN 0039DD                                     _TMR1H 003FB1  
                                   _TMR1L 003FB0                                     _PORTA 003FCA  
                                   _TRISA 003FC2                                     _TRISB 003FC3  
                                   _TRISC 003FC4                               _Default_ISR 04A8  
                        __end_of_TMR1_ISR 029A                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                      __CFG_MCLRE$EXTMCLR 000000                   __end_of_TMR1_Initialize 0258  
                                   pclath 003FFA                                     status 003FD8  
                         _TMR1_WriteTimer 0392                           __initialization 046C  
                            __end_of_main 01BA                            __CFG_SAFEN$OFF 000000  
                                  ??_main 0007                            __CFG_PR1WAY$ON 000000  
                           __activetblptr 000002                            __CFG_MVECEN$ON 000000  
                                  _ANSELA 003A40                                    _ANSELB 003A50  
                                  _ANSELC 003A60                                    _RB1I2C 003A5A  
                                  _T1GATE 003FB4                                    _RB2I2C 003A5B  
                                  _T1GCON 003FB3            __size_of_vHILPWM6_SetDutyCycle 0026  
                                  _RC3I2C 003A6A                                    _RC4I2C 003A6B  
                                  _RA0PPS 003A00                                    _RA1PPS 003A01  
                                  _RA2PPS 003A02             __end_of_vHILPWM6_SetDutyCycle 040A  
                 TMR1_WriteTimer@timerVal 0001                                    _ODCONA 003A42  
                                  _ODCONB 003A52                                    _ODCONC 003A62  
                                  i2l1323 0258                                    i2l1325 025C  
                                  i2l1327 026C                                    i2l1281 03A0  
                                  i2l1329 027E                            __CFG_WDTCCS$SC 000000  
                                  i2l1291 03B6                                    i2l1283 03A2  
                                  i2l1285 03A6                                    i2l1287 03AC  
                                  i2l1279 0392                                    i2l1289 03B2  
                                  _INLVLA 003A44                                    _INLVLB 003A54  
                                  _INLVLC 003A64                                    _INLVLE 003A84  
                                  _IVTADH 00389E                                    _IVTADL 00389D  
                                  _IVTADU 00389F                                    _OSCFRQ 0039DF  
                                  _TMR2IF 01CD22                                    _TMR4IF 01CD38  
                                  _TMR6IF 01CD48                            __CFG_XINST$OFF 000000  
    __end_of_TMR1_DefaultInterruptHandler 04A8     __size_of_TMR1_DefaultInterruptHandler 0002  
            _TMR1_DefaultInterruptHandler 04A6                 __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                          __CFG_STVREN$ON 000000                            _PMD_Initialize 0430  
                                  tblptru 003FF8  TMR1_SetInterruptHandler@InterruptHandler 0003  
                 __end_of_TMR1_WriteTimer 03BE             __size_of_INTERRUPT_Initialize 003E  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 0482  
                              __accesstop 0060                   __end_of__initialization 0478  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                       main@__u16_Counter 000B                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0007                                 ?_TMR1_ISR 0001  
         fp__TMR1_DefaultInterruptHandler 0000             ?_TMR1_DefaultInterruptHandler 0001  
                          ivt0x8_undefint 00AC                    __end_of_PMD_Initialize 0454  
               __end_of_SYSTEM_Initialize 0498                           __CFG_IVT1WAY$ON 000000  
          __size_of_vHILPWM7_SetDutyCycle 0026             __end_of_vHILPWM7_SetDutyCycle 03E4  
                              __pnvCOMRAM 000F                                   IVTBASEH 003FD6  
                                 IVTBASEL 003FD5                                   IVTBASEU 003FD7  
                              ??_TMR1_ISR 0003                           __CFG_PPS1WAY$ON 000000  
                         ?_PMD_Initialize 0001                       __CFG_PWRTS$PWRT_OFF 000000  
                            ?_Default_ISR 0001                                   _OSCCON1 0039D9  
                                 _OSCCON3 0039DB                                   _IVTLOCK 003FD4  
                                 i2u13_40 03A0                                   i2u13_41 039C  
                                 i2u16_40 027E                                   i2u16_41 027A  
                                 i2u17_48 0284                                   i2u17_49 0298  
                                 _OSCTUNE 0039DE                                   _PWM5DCH 003F6D  
                                 _PWM5DCL 003F6C                                   _PWM6DCH 003F69  
                                 _PWM6DCL 003F68                                   _PWM7DCH 003F65  
                                 _PWM7DCL 003F64                                   _PWM5CON 003F6E  
                                 _PWM6CON 003F6A                                   _PWM7CON 003F66  
                                 _SLRCONA 003A43                                   _SLRCONB 003A53  
                                 _SLRCONC 003A63                          ?_TMR1_WriteTimer 0001  
                   __end_of_vHILPWM5_Init 0354                     __end_of_vHILPWM6_Init 0316  
                   __end_of_vHILPWM7_Init 02D8                     _vHILPWM5_SetDutyCycle 040A  
               INTERRUPT_Initialize@state 0003                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit 046C  
                                 __ramtop 0800                                   __ptext0 00B2  
                                 __ptext1 029A                                   __ptext2 03BE  
                                 __ptext3 02D8                                   __ptext4 03E4  
                                 __ptext5 0316                                   __ptext6 040A  
                                 __ptext7 0482                                   __ptext8 0212  
                                 __ptext9 0498            ??_TMR1_DefaultInterruptHandler 0001  
                         __CFG_WRTAPP$OFF 000000                                 _T1CONbits 003FB2  
                   _OSCILLATOR_Initialize 0454         __size_of_TMR1_SetInterruptHandler 000E  
                ??_PIN_MANAGER_Initialize 0003                 ?_TMR1_SetInterruptHandler 0003  
                         __CFG_WRTSAF$OFF 000000                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 0478                             __Lmediumconst 0000  
                   __CFG_WDTCPS$WDTCPS_31 000000                          __CFG_FEXTOSC$OFF 000000  
                  ?_vHILPWM5_SetDutyCycle 0003                        main@__u16_Counter2 000D  
                   _vHILPWM6_SetDutyCycle 03E4              __end_of_INTERRUPT_Initialize 0392  
                       __size_of_TMR1_ISR 0042                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 046C           __size_of_PIN_MANAGER_Initialize 0058  
                    __size_of_Default_ISR 0002                                ivt0x8_base 0008  
                        __CFG_LPBOREN$OFF 000000                  __size_of_TMR1_Initialize 0046  
                        ??_PMD_Initialize 0003                    ?_vHILPWM6_SetDutyCycle 0003  
                   _vHILPWM7_SetDutyCycle 03BE                    _PIN_MANAGER_Initialize 01BA  
        __end_of_TMR1_SetInterruptHandler 04A6                    __CFG_BBSIZE$BBSIZE_512 000000  
                    _INTERRUPT_Initialize 0354                                  _IPR4bits 003984  
                                _PIE4bits 003994                       __CFG_BORV$VBOR_2P45 000000  
                __size_of_TMR1_WriteTimer 002C                                  _PIR4bits 0039A4  
                                _TMR1_ISR 0258                         ??_TMR1_Initialize 0005  
                  __size_of_vHILPWM5_Init 003E                    __size_of_vHILPWM6_Init 003E  
                  __size_of_vHILPWM7_Init 003E                   ??_vHILPWM5_SetDutyCycle 0005  
                             _INTCON0bits 003FD2                     ?_INTERRUPT_Initialize 0001  
                  ?_vHILPWM7_SetDutyCycle 0003                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
    vHILPWM7_SetDutyCycle@__u16_DutyCycle 0003                   ??_OSCILLATOR_Initialize 0003  
                _TMR1_SetInterruptHandler 0498                     _TMR1_InterruptHandler 000F  
                                __pivt0x8 0008                                  __ptext10 0430  
                                __ptext11 01BA                                  __ptext12 0454  
                                __ptext13 0354                                _T1GCONbits 003FB3  
                                __ptext14 0258                                  __ptext15 0392  
                                __ptext16 04A6                                  __ptext17 04A8  
                                __ptext18 0000                             _vHILPWM5_Init 0316  
                           _vHILPWM6_Init 02D8                             __size_of_main 0108  
                           _vHILPWM7_Init 029A                      __CFG_WDTCWS$WDTCWS_7 000000  
                             _IVTLOCKbits 003FD4      vHILPWM6_SetDutyCycle@__u16_DutyCycle 0003  
                       ??_TMR1_WriteTimer 0003                             ??_Default_ISR 0003  
                  ??_INTERRUPT_Initialize 0003                   ??_vHILPWM6_SetDutyCycle 0005  
                                intlevel2 0000                            ?_vHILPWM5_Init 0001  
                          ?_vHILPWM6_Init 0001                            ?_vHILPWM7_Init 0001  
                 ?_PIN_MANAGER_Initialize 0001                         __CFG_CLKOUTEN$OFF 000000  
    vHILPWM5_SetDutyCycle@__u16_DutyCycle 0003                   main@_u8_VitesseDescente 000A  
                     __end_of_Default_ISR 04AA            __end_of_PIN_MANAGER_Initialize 0212  
                         _TMR1_Initialize 0212                     main@_u8_VitesseMontee 0009  
